{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{SimpleAuth}from'./simple-auth';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();const authService=new SimpleAuth();/**\n * Auth Context Provider\n * Manages authentication state for the entire app\n * Simple session-based auth, no complex token management\n */export function AuthProvider(_ref){let{children}=_ref;const[user,setUser]=useState(null);const[isAuthenticated,setIsAuthenticated]=useState(false);const[loading,setLoading]=useState(true);useEffect(()=>{// Check for existing session\ncheckSession();setLoading(false);},[]);const checkSession=()=>{// For demo, check localStorage\nconst authData=localStorage.getItem('haven_auth');if(authData){try{const{user}=JSON.parse(authData);setUser(user);setIsAuthenticated(true);}catch(e){localStorage.removeItem('haven_auth');}}};const login=async(email,password)=>{try{const result=await authService.login(email,password);// Store auth data for demo\nlocalStorage.setItem('haven_auth',JSON.stringify({user:result.user,sessionId:result.sessionId}));// Update state\nsetUser(result.user);setIsAuthenticated(true);return result;}catch(error){throw error;}};const register=async(email,password,name)=>{try{const result=await authService.register(email,password,name);return result;}catch(error){throw error;}};const logout=()=>{// Clear auth data\nlocalStorage.removeItem('haven_auth');setUser(null);setIsAuthenticated(false);// Redirect to login\nwindow.location.href='/login';};const value={user,isAuthenticated,loading,login,register,logout};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});}export function useAuth(){const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within AuthProvider');}return context;}","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","SimpleAuth","jsx","_jsx","AuthContext","authService","AuthProvider","_ref","children","user","setUser","isAuthenticated","setIsAuthenticated","loading","setLoading","checkSession","authData","localStorage","getItem","JSON","parse","e","removeItem","login","email","password","result","setItem","stringify","sessionId","error","register","name","logout","window","location","href","value","Provider","useAuth","context","Error"],"sources":["C:/Users/brian/OneDrive/Desktop/shadow-sidekick-sqlite-vss-poc/haven-mental-health/src/auth/auth-context.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { SimpleAuth } from './simple-auth';\n\nconst AuthContext = createContext();\nconst authService = new SimpleAuth();\n\n/**\n * Auth Context Provider\n * Manages authentication state for the entire app\n * Simple session-based auth, no complex token management\n */\nexport function AuthProvider({ children }) {\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Check for existing session\n    checkSession();\n    setLoading(false);\n  }, []);\n\n  const checkSession = () => {\n    // For demo, check localStorage\n    const authData = localStorage.getItem('haven_auth');\n    if (authData) {\n      try {\n        const { user } = JSON.parse(authData);\n        setUser(user);\n        setIsAuthenticated(true);\n      } catch (e) {\n        localStorage.removeItem('haven_auth');\n      }\n    }\n  };\n\n  const login = async (email, password) => {\n    try {\n      const result = await authService.login(email, password);\n      \n      // Store auth data for demo\n      localStorage.setItem('haven_auth', JSON.stringify({\n        user: result.user,\n        sessionId: result.sessionId\n      }));\n      \n      // Update state\n      setUser(result.user);\n      setIsAuthenticated(true);\n      \n      return result;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const register = async (email, password, name) => {\n    try {\n      const result = await authService.register(email, password, name);\n      return result;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const logout = () => {\n    // Clear auth data\n    localStorage.removeItem('haven_auth');\n    setUser(null);\n    setIsAuthenticated(false);\n    \n    // Redirect to login\n    window.location.href = '/login';\n  };\n\n  const value = {\n    user,\n    isAuthenticated,\n    loading,\n    login,\n    register,\n    logout\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n\nexport function useAuth() {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within AuthProvider');\n  }\n  return context;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}