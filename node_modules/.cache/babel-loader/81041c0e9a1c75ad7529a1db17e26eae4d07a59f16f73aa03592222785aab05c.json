{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brian\\\\OneDrive\\\\Desktop\\\\shadow-sidekick-sqlite-vss-poc\\\\haven-mental-health\\\\src\\\\notes\\\\session-note.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Paper, TextField, Button, Typography, Select, MenuItem, FormControl, InputLabel, Alert } from '@mui/material';\nimport { Save, Lock } from '@mui/icons-material';\nimport { useEncryption } from '../encryption/encryption-hook';\n\n/**\n * Session Note Component - Simple, focused on therapy needs\n * SOAP, DAP, or free-form notes\n * No complex forms, no insurance codes, no billing integration\n */\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function SessionNote({\n  patientId,\n  patientName,\n  sessionDate\n}) {\n  _s();\n  const [noteType, setNoteType] = useState('SOAP');\n  const [noteData, setNoteData] = useState({\n    // SOAP format\n    subjective: '',\n    objective: '',\n    assessment: '',\n    plan: '',\n    // DAP format\n    data: '',\n    assessmentDap: '',\n    planDap: '',\n    // Free form\n    freeText: '',\n    // Common fields\n    duration: 50,\n    // Standard 50-minute session\n    sessionType: 'individual'\n  });\n  const [saved, setSaved] = useState(false);\n  const {\n    encrypt\n  } = useEncryption();\n  const handleSave = async () => {\n    // Prepare note for encryption\n    const note = {\n      patientId,\n      patientName,\n      date: sessionDate || new Date(),\n      type: noteType,\n      duration: noteData.duration,\n      sessionType: noteData.sessionType,\n      content: noteType === 'SOAP' ? {\n        subjective: noteData.subjective,\n        objective: noteData.objective,\n        assessment: noteData.assessment,\n        plan: noteData.plan\n      } : noteType === 'DAP' ? {\n        data: noteData.data,\n        assessment: noteData.assessmentDap,\n        plan: noteData.planDap\n      } : {\n        note: noteData.freeText\n      },\n      createdAt: new Date(),\n      signed: true,\n      therapistId: 'current-user-id' // Would come from auth\n    };\n\n    // Encrypt the entire note\n    const encryptedNote = await encrypt(note);\n\n    // Save to local storage (real app would save to secure backend)\n    const notes = JSON.parse(localStorage.getItem('therapy-notes') || '[]');\n    notes.push(encryptedNote);\n    localStorage.setItem('therapy-notes', JSON.stringify(notes));\n    setSaved(true);\n    setTimeout(() => setSaved(false), 3000);\n  };\n  const renderSOAPFields = () => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      fullWidth: true,\n      label: \"Subjective\",\n      placeholder: \"Client's reported symptoms, feelings, and concerns...\",\n      multiline: true,\n      rows: 3,\n      value: noteData.subjective,\n      onChange: e => setNoteData({\n        ...noteData,\n        subjective: e.target.value\n      }),\n      sx: {\n        mb: 2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      fullWidth: true,\n      label: \"Objective\",\n      placeholder: \"Observable behaviors, affect, appearance...\",\n      multiline: true,\n      rows: 3,\n      value: noteData.objective,\n      onChange: e => setNoteData({\n        ...noteData,\n        objective: e.target.value\n      }),\n      sx: {\n        mb: 2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      fullWidth: true,\n      label: \"Assessment\",\n      placeholder: \"Clinical impressions, progress, diagnosis considerations...\",\n      multiline: true,\n      rows: 3,\n      value: noteData.assessment,\n      onChange: e => setNoteData({\n        ...noteData,\n        assessment: e.target.value\n      }),\n      sx: {\n        mb: 2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      fullWidth: true,\n      label: \"Plan\",\n      placeholder: \"Treatment plan, homework, next session focus...\",\n      multiline: true,\n      rows: 3,\n      value: noteData.plan,\n      onChange: e => setNoteData({\n        ...noteData,\n        plan: e.target.value\n      }),\n      sx: {\n        mb: 2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n  const renderDAPFields = () => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      fullWidth: true,\n      label: \"Data\",\n      placeholder: \"What happened in session - facts and observations...\",\n      multiline: true,\n      rows: 4,\n      value: noteData.data,\n      onChange: e => setNoteData({\n        ...noteData,\n        data: e.target.value\n      }),\n      sx: {\n        mb: 2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      fullWidth: true,\n      label: \"Assessment\",\n      placeholder: \"Clinical interpretation of the data...\",\n      multiline: true,\n      rows: 3,\n      value: noteData.assessmentDap,\n      onChange: e => setNoteData({\n        ...noteData,\n        assessmentDap: e.target.value\n      }),\n      sx: {\n        mb: 2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      fullWidth: true,\n      label: \"Plan\",\n      placeholder: \"Next steps and treatment planning...\",\n      multiline: true,\n      rows: 3,\n      value: noteData.planDap,\n      onChange: e => setNoteData({\n        ...noteData,\n        planDap: e.target.value\n      }),\n      sx: {\n        mb: 2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n  const renderFreeForm = () => /*#__PURE__*/_jsxDEV(TextField, {\n    fullWidth: true,\n    label: \"Session Notes\",\n    placeholder: \"Document the session in your preferred format...\",\n    multiline: true,\n    rows: 12,\n    value: noteData.freeText,\n    onChange: e => setNoteData({\n      ...noteData,\n      freeText: e.target.value\n    }),\n    sx: {\n      mb: 2\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    sx: {\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: [\"Session Note: \", patientName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(Lock, {\n          fontSize: \"small\",\n          color: \"success\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"caption\",\n          color: \"success.main\",\n          children: \"Encrypted & HIPAA Compliant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        gap: 2,\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        sx: {\n          minWidth: 120\n        },\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          children: \"Note Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: noteType,\n          onChange: e => setNoteType(e.target.value),\n          label: \"Note Type\",\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"SOAP\",\n            children: \"SOAP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"DAP\",\n            children: \"DAP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"FREE\",\n            children: \"Free Form\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Duration (minutes)\",\n        type: \"number\",\n        value: noteData.duration,\n        onChange: e => setNoteData({\n          ...noteData,\n          duration: e.target.value\n        }),\n        sx: {\n          width: 150\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        sx: {\n          minWidth: 150\n        },\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          children: \"Session Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: noteData.sessionType,\n          onChange: e => setNoteData({\n            ...noteData,\n            sessionType: e.target.value\n          }),\n          label: \"Session Type\",\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"individual\",\n            children: \"Individual\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"intake\",\n            children: \"Intake\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"crisis\",\n            children: \"Crisis\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), noteType === 'SOAP' && renderSOAPFields(), noteType === 'DAP' && renderDAPFields(), noteType === 'FREE' && renderFreeForm(), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 3,\n        display: 'flex',\n        justifyContent: 'space-between'\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        startIcon: /*#__PURE__*/_jsxDEV(Save, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 22\n        }, this),\n        onClick: handleSave,\n        size: \"large\",\n        children: \"Save & Sign Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this), saved && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"success\",\n      sx: {\n        mt: 2\n      },\n      children: \"Session note saved and encrypted successfully.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 5\n  }, this);\n}\n\n// What we're NOT adding:\n// - CPT codes (billing complexity)\n// - Insurance requirements (not our problem)\n// - Treatment plan builders (too complex)\n// - Outcome measures (later feature)\n// - Diagnosis codes (liability issues)\n// - Medication tracking (scope creep)\n// Just simple, secure session notes.\n_s(SessionNote, \"Av98uNTWWEw2mYdbkROwfl+madU=\", false, function () {\n  return [useEncryption];\n});\n_c = SessionNote;\nvar _c;\n$RefreshReg$(_c, \"SessionNote\");","map":{"version":3,"names":["React","useState","Box","Paper","TextField","Button","Typography","Select","MenuItem","FormControl","InputLabel","Alert","Save","Lock","useEncryption","jsxDEV","_jsxDEV","Fragment","_Fragment","SessionNote","patientId","patientName","sessionDate","_s","noteType","setNoteType","noteData","setNoteData","subjective","objective","assessment","plan","data","assessmentDap","planDap","freeText","duration","sessionType","saved","setSaved","encrypt","handleSave","note","date","Date","type","content","createdAt","signed","therapistId","encryptedNote","notes","JSON","parse","localStorage","getItem","push","setItem","stringify","setTimeout","renderSOAPFields","children","fullWidth","label","placeholder","multiline","rows","value","onChange","e","target","sx","mb","fileName","_jsxFileName","lineNumber","columnNumber","renderDAPFields","renderFreeForm","p","display","justifyContent","variant","alignItems","gap","fontSize","color","minWidth","width","mt","startIcon","onClick","size","severity","_c","$RefreshReg$"],"sources":["C:/Users/brian/OneDrive/Desktop/shadow-sidekick-sqlite-vss-poc/haven-mental-health/src/notes/session-note.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Box,\n  Paper,\n  TextField,\n  Button,\n  Typography,\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  Alert\n} from '@mui/material';\nimport { Save, Lock } from '@mui/icons-material';\nimport { useEncryption } from '../encryption/encryption-hook';\n\n/**\n * Session Note Component - Simple, focused on therapy needs\n * SOAP, DAP, or free-form notes\n * No complex forms, no insurance codes, no billing integration\n */\nexport function SessionNote({ patientId, patientName, sessionDate }) {\n  const [noteType, setNoteType] = useState('SOAP');\n  const [noteData, setNoteData] = useState({\n    // SOAP format\n    subjective: '',\n    objective: '',\n    assessment: '',\n    plan: '',\n    // DAP format\n    data: '',\n    assessmentDap: '',\n    planDap: '',\n    // Free form\n    freeText: '',\n    // Common fields\n    duration: 50, // Standard 50-minute session\n    sessionType: 'individual'\n  });\n  const [saved, setSaved] = useState(false);\n  const { encrypt } = useEncryption();\n\n  const handleSave = async () => {\n    // Prepare note for encryption\n    const note = {\n      patientId,\n      patientName,\n      date: sessionDate || new Date(),\n      type: noteType,\n      duration: noteData.duration,\n      sessionType: noteData.sessionType,\n      content: noteType === 'SOAP' ? {\n        subjective: noteData.subjective,\n        objective: noteData.objective,\n        assessment: noteData.assessment,\n        plan: noteData.plan\n      } : noteType === 'DAP' ? {\n        data: noteData.data,\n        assessment: noteData.assessmentDap,\n        plan: noteData.planDap\n      } : {\n        note: noteData.freeText\n      },\n      createdAt: new Date(),\n      signed: true,\n      therapistId: 'current-user-id' // Would come from auth\n    };\n\n    // Encrypt the entire note\n    const encryptedNote = await encrypt(note);\n    \n    // Save to local storage (real app would save to secure backend)\n    const notes = JSON.parse(localStorage.getItem('therapy-notes') || '[]');\n    notes.push(encryptedNote);\n    localStorage.setItem('therapy-notes', JSON.stringify(notes));\n    \n    setSaved(true);\n    setTimeout(() => setSaved(false), 3000);\n  };\n\n  const renderSOAPFields = () => (\n    <>\n      <TextField\n        fullWidth\n        label=\"Subjective\"\n        placeholder=\"Client's reported symptoms, feelings, and concerns...\"\n        multiline\n        rows={3}\n        value={noteData.subjective}\n        onChange={(e) => setNoteData({...noteData, subjective: e.target.value})}\n        sx={{ mb: 2 }}\n      />\n      <TextField\n        fullWidth\n        label=\"Objective\"\n        placeholder=\"Observable behaviors, affect, appearance...\"\n        multiline\n        rows={3}\n        value={noteData.objective}\n        onChange={(e) => setNoteData({...noteData, objective: e.target.value})}\n        sx={{ mb: 2 }}\n      />\n      <TextField\n        fullWidth\n        label=\"Assessment\"\n        placeholder=\"Clinical impressions, progress, diagnosis considerations...\"\n        multiline\n        rows={3}\n        value={noteData.assessment}\n        onChange={(e) => setNoteData({...noteData, assessment: e.target.value})}\n        sx={{ mb: 2 }}\n      />\n      <TextField\n        fullWidth\n        label=\"Plan\"\n        placeholder=\"Treatment plan, homework, next session focus...\"\n        multiline\n        rows={3}\n        value={noteData.plan}\n        onChange={(e) => setNoteData({...noteData, plan: e.target.value})}\n        sx={{ mb: 2 }}\n      />\n    </>\n  );\n\n  const renderDAPFields = () => (\n    <>\n      <TextField\n        fullWidth\n        label=\"Data\"\n        placeholder=\"What happened in session - facts and observations...\"\n        multiline\n        rows={4}\n        value={noteData.data}\n        onChange={(e) => setNoteData({...noteData, data: e.target.value})}\n        sx={{ mb: 2 }}\n      />\n      <TextField\n        fullWidth\n        label=\"Assessment\"\n        placeholder=\"Clinical interpretation of the data...\"\n        multiline\n        rows={3}\n        value={noteData.assessmentDap}\n        onChange={(e) => setNoteData({...noteData, assessmentDap: e.target.value})}\n        sx={{ mb: 2 }}\n      />\n      <TextField\n        fullWidth\n        label=\"Plan\"\n        placeholder=\"Next steps and treatment planning...\"\n        multiline\n        rows={3}\n        value={noteData.planDap}\n        onChange={(e) => setNoteData({...noteData, planDap: e.target.value})}\n        sx={{ mb: 2 }}\n      />\n    </>\n  );\n\n  const renderFreeForm = () => (\n    <TextField\n      fullWidth\n      label=\"Session Notes\"\n      placeholder=\"Document the session in your preferred format...\"\n      multiline\n      rows={12}\n      value={noteData.freeText}\n      onChange={(e) => setNoteData({...noteData, freeText: e.target.value})}\n      sx={{ mb: 2 }}\n    />\n  );\n\n  return (\n    <Paper sx={{ p: 3 }}>\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 3 }}>\n        <Typography variant=\"h5\">\n          Session Note: {patientName}\n        </Typography>\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n          <Lock fontSize=\"small\" color=\"success\" />\n          <Typography variant=\"caption\" color=\"success.main\">\n            Encrypted & HIPAA Compliant\n          </Typography>\n        </Box>\n      </Box>\n\n      <Box sx={{ display: 'flex', gap: 2, mb: 3 }}>\n        <FormControl sx={{ minWidth: 120 }}>\n          <InputLabel>Note Type</InputLabel>\n          <Select\n            value={noteType}\n            onChange={(e) => setNoteType(e.target.value)}\n            label=\"Note Type\"\n          >\n            <MenuItem value=\"SOAP\">SOAP</MenuItem>\n            <MenuItem value=\"DAP\">DAP</MenuItem>\n            <MenuItem value=\"FREE\">Free Form</MenuItem>\n          </Select>\n        </FormControl>\n\n        <TextField\n          label=\"Duration (minutes)\"\n          type=\"number\"\n          value={noteData.duration}\n          onChange={(e) => setNoteData({...noteData, duration: e.target.value})}\n          sx={{ width: 150 }}\n        />\n\n        <FormControl sx={{ minWidth: 150 }}>\n          <InputLabel>Session Type</InputLabel>\n          <Select\n            value={noteData.sessionType}\n            onChange={(e) => setNoteData({...noteData, sessionType: e.target.value})}\n            label=\"Session Type\"\n          >\n            <MenuItem value=\"individual\">Individual</MenuItem>\n            <MenuItem value=\"intake\">Intake</MenuItem>\n            <MenuItem value=\"crisis\">Crisis</MenuItem>\n          </Select>\n        </FormControl>\n      </Box>\n\n      {noteType === 'SOAP' && renderSOAPFields()}\n      {noteType === 'DAP' && renderDAPFields()}\n      {noteType === 'FREE' && renderFreeForm()}\n\n      <Box sx={{ mt: 3, display: 'flex', justifyContent: 'space-between' }}>\n        <Button\n          variant=\"contained\"\n          startIcon={<Save />}\n          onClick={handleSave}\n          size=\"large\"\n        >\n          Save & Sign Note\n        </Button>\n      </Box>\n\n      {saved && (\n        <Alert severity=\"success\" sx={{ mt: 2 }}>\n          Session note saved and encrypted successfully.\n        </Alert>\n      )}\n    </Paper>\n  );\n}\n\n// What we're NOT adding:\n// - CPT codes (billing complexity)\n// - Insurance requirements (not our problem)\n// - Treatment plan builders (too complex)\n// - Outcome measures (later feature)\n// - Diagnosis codes (liability issues)\n// - Medication tracking (scope creep)\n// Just simple, secure session notes."],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}