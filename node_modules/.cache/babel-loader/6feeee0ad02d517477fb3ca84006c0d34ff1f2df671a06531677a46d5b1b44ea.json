{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brian\\\\OneDrive\\\\Desktop\\\\shadow-sidekick-sqlite-vss-poc\\\\haven-mental-health\\\\src\\\\scheduling\\\\simple-scheduler.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Paper, Typography, Button, Dialog, DialogTitle, DialogContent, TextField, Select, MenuItem, FormControl, InputLabel, Grid, Card, CardContent, Chip, IconButton } from '@mui/material';\nimport { Add, Cancel, CheckCircle } from '@mui/icons-material';\nimport { DatePicker, TimePicker } from '@mui/x-date-pickers';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\n\n/**\n * Simple Scheduler - Basic appointment management\n * No complex recurring appointments, no resource management\n * Just simple time slots for therapy sessions\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function SimpleScheduler() {\n  _s();\n  const [appointments, setAppointments] = useState([{\n    id: 1,\n    patientName: 'Jane Doe',\n    date: new Date(2024, 0, 15, 10, 0),\n    duration: 50,\n    type: 'session',\n    status: 'confirmed'\n  }, {\n    id: 2,\n    patientName: 'John Smith',\n    date: new Date(2024, 0, 15, 14, 0),\n    duration: 50,\n    type: 'intake',\n    status: 'confirmed'\n  }]);\n  const [showNewAppointment, setShowNewAppointment] = useState(false);\n  const [newAppointment, setNewAppointment] = useState({\n    patientName: '',\n    date: new Date(),\n    time: new Date(),\n    duration: 50,\n    type: 'session'\n  });\n  const handleCreateAppointment = () => {\n    const appointmentDate = new Date(newAppointment.date.getFullYear(), newAppointment.date.getMonth(), newAppointment.date.getDate(), newAppointment.time.getHours(), newAppointment.time.getMinutes());\n    const appointment = {\n      id: Date.now(),\n      patientName: newAppointment.patientName,\n      date: appointmentDate,\n      duration: newAppointment.duration,\n      type: newAppointment.type,\n      status: 'confirmed'\n    };\n    setAppointments([...appointments, appointment]);\n    setShowNewAppointment(false);\n    setNewAppointment({\n      patientName: '',\n      date: new Date(),\n      time: new Date(),\n      duration: 50,\n      type: 'session'\n    });\n  };\n  const handleCancelAppointment = id => {\n    setAppointments(appointments.map(apt => apt.id === id ? {\n      ...apt,\n      status: 'cancelled'\n    } : apt));\n  };\n  const getAppointmentsByDate = date => {\n    return appointments.filter(apt => apt.date.toDateString() === date.toDateString()).sort((a, b) => a.date - b.date);\n  };\n  const today = new Date();\n  const todayAppointments = getAppointmentsByDate(today);\n  const tomorrowAppointments = getAppointmentsByDate(new Date(today.getTime() + 24 * 60 * 60 * 1000));\n  return /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n    dateAdapter: AdapterDateFns,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          mb: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          children: \"Schedule\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          startIcon: /*#__PURE__*/_jsxDEV(Add, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 24\n          }, this),\n          onClick: () => setShowNewAppointment(true),\n          children: \"New Appointment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          p: 2,\n          mb: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: [\"Today - \", today.toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), todayAppointments.length === 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"text.secondary\",\n          children: \"No appointments scheduled\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: todayAppointments.map(apt => /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              variant: \"outlined\",\n              children: /*#__PURE__*/_jsxDEV(CardContent, {\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: 'flex',\n                    justifyContent: 'space-between'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Box, {\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"h6\",\n                      children: apt.date.toLocaleTimeString([], {\n                        hour: '2-digit',\n                        minute: '2-digit'\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 136,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      children: apt.patientName\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 142,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        mt: 1,\n                        display: 'flex',\n                        gap: 1\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Chip, {\n                        label: apt.type,\n                        size: \"small\",\n                        color: apt.type === 'intake' ? 'primary' : 'default'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 144,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                        label: `${apt.duration} min`,\n                        size: \"small\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 149,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 143,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 135,\n                    columnNumber: 25\n                  }, this), apt.status === 'confirmed' && /*#__PURE__*/_jsxDEV(IconButton, {\n                    color: \"error\",\n                    onClick: () => handleCancelAppointment(apt.id),\n                    children: /*#__PURE__*/_jsxDEV(Cancel, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 160,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 156,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 19\n            }, this)\n          }, apt.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          p: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"Tomorrow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), tomorrowAppointments.length === 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"text.secondary\",\n          children: \"No appointments scheduled\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: tomorrowAppointments.map(apt => /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              variant: \"outlined\",\n              children: /*#__PURE__*/_jsxDEV(CardContent, {\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle1\",\n                  children: [apt.date.toLocaleTimeString([], {\n                    hour: '2-digit',\n                    minute: '2-digit'\n                  }), \" - \", apt.patientName]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 19\n            }, this)\n          }, apt.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: showNewAppointment,\n        onClose: () => setShowNewAppointment(false),\n        maxWidth: \"sm\",\n        fullWidth: true,\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: \"Schedule New Appointment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              pt: 2,\n              display: 'flex',\n              flexDirection: 'column',\n              gap: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Patient Name\",\n              value: newAppointment.patientName,\n              onChange: e => setNewAppointment({\n                ...newAppointment,\n                patientName: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n              label: \"Date\",\n              value: newAppointment.date,\n              onChange: date => setNewAppointment({\n                ...newAppointment,\n                date\n              }),\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                ...params,\n                fullWidth: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 42\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TimePicker, {\n              label: \"Time\",\n              value: newAppointment.time,\n              onChange: time => setNewAppointment({\n                ...newAppointment,\n                time\n              }),\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                ...params,\n                fullWidth: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 42\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Appointment Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: newAppointment.type,\n                onChange: e => setNewAppointment({\n                  ...newAppointment,\n                  type: e.target.value\n                }),\n                label: \"Appointment Type\",\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"session\",\n                  children: \"Regular Session\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"intake\",\n                  children: \"Intake Session\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"crisis\",\n                  children: \"Crisis Session\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Duration\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: newAppointment.duration,\n                onChange: e => setNewAppointment({\n                  ...newAppointment,\n                  duration: e.target.value\n                }),\n                label: \"Duration\",\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 30,\n                  children: \"30 minutes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 50,\n                  children: \"50 minutes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 60,\n                  children: \"60 minutes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 90,\n                  children: \"90 minutes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                gap: 2,\n                mt: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                onClick: handleCreateAppointment,\n                disabled: !newAppointment.patientName,\n                fullWidth: true,\n                children: \"Schedule\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                onClick: () => setShowNewAppointment(false),\n                fullWidth: true,\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n\n// What we're NOT building:\n// - Complex recurring appointments (too complex)\n// - Multi-therapist scheduling (solo practice focus)\n// - Waitlist management (overengineering)\n// - Appointment reminders (can add later)\n// - Calendar sync (privacy concerns)\n// - Resource scheduling (rooms, equipment)\n// Just simple appointment booking\n_s(SimpleScheduler, \"/AmE6E+ZKl0bGBNT+X9SZhEi5uw=\");\n_c = SimpleScheduler;\nvar _c;\n$RefreshReg$(_c, \"SimpleScheduler\");","map":{"version":3,"names":["React","useState","Box","Paper","Typography","Button","Dialog","DialogTitle","DialogContent","TextField","Select","MenuItem","FormControl","InputLabel","Grid","Card","CardContent","Chip","IconButton","Add","Cancel","CheckCircle","DatePicker","TimePicker","LocalizationProvider","AdapterDateFns","jsxDEV","_jsxDEV","SimpleScheduler","_s","appointments","setAppointments","id","patientName","date","Date","duration","type","status","showNewAppointment","setShowNewAppointment","newAppointment","setNewAppointment","time","handleCreateAppointment","appointmentDate","getFullYear","getMonth","getDate","getHours","getMinutes","appointment","now","handleCancelAppointment","map","apt","getAppointmentsByDate","filter","toDateString","sort","a","b","today","todayAppointments","tomorrowAppointments","getTime","dateAdapter","children","sx","p","display","justifyContent","mb","variant","fileName","_jsxFileName","lineNumber","columnNumber","startIcon","onClick","gutterBottom","toLocaleDateString","length","color","container","spacing","item","xs","md","toLocaleTimeString","hour","minute","mt","gap","label","size","open","onClose","maxWidth","fullWidth","pt","flexDirection","value","onChange","e","target","renderInput","params","disabled","_c","$RefreshReg$"],"sources":["C:/Users/brian/OneDrive/Desktop/shadow-sidekick-sqlite-vss-poc/haven-mental-health/src/scheduling/simple-scheduler.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Box,\n  Paper,\n  Typography,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  TextField,\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  Grid,\n  Card,\n  CardContent,\n  Chip,\n  IconButton\n} from '@mui/material';\nimport { Add, Cancel, CheckCircle } from '@mui/icons-material';\nimport { DatePicker, TimePicker } from '@mui/x-date-pickers';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\n\n/**\n * Simple Scheduler - Basic appointment management\n * No complex recurring appointments, no resource management\n * Just simple time slots for therapy sessions\n */\nexport function SimpleScheduler() {\n  const [appointments, setAppointments] = useState([\n    {\n      id: 1,\n      patientName: 'Jane Doe',\n      date: new Date(2024, 0, 15, 10, 0),\n      duration: 50,\n      type: 'session',\n      status: 'confirmed'\n    },\n    {\n      id: 2,\n      patientName: 'John Smith',\n      date: new Date(2024, 0, 15, 14, 0),\n      duration: 50,\n      type: 'intake',\n      status: 'confirmed'\n    }\n  ]);\n  \n  const [showNewAppointment, setShowNewAppointment] = useState(false);\n  const [newAppointment, setNewAppointment] = useState({\n    patientName: '',\n    date: new Date(),\n    time: new Date(),\n    duration: 50,\n    type: 'session'\n  });\n\n  const handleCreateAppointment = () => {\n    const appointmentDate = new Date(\n      newAppointment.date.getFullYear(),\n      newAppointment.date.getMonth(),\n      newAppointment.date.getDate(),\n      newAppointment.time.getHours(),\n      newAppointment.time.getMinutes()\n    );\n\n    const appointment = {\n      id: Date.now(),\n      patientName: newAppointment.patientName,\n      date: appointmentDate,\n      duration: newAppointment.duration,\n      type: newAppointment.type,\n      status: 'confirmed'\n    };\n\n    setAppointments([...appointments, appointment]);\n    setShowNewAppointment(false);\n    setNewAppointment({\n      patientName: '',\n      date: new Date(),\n      time: new Date(),\n      duration: 50,\n      type: 'session'\n    });\n  };\n\n  const handleCancelAppointment = (id) => {\n    setAppointments(appointments.map(apt => \n      apt.id === id ? { ...apt, status: 'cancelled' } : apt\n    ));\n  };\n\n  const getAppointmentsByDate = (date) => {\n    return appointments.filter(apt => \n      apt.date.toDateString() === date.toDateString()\n    ).sort((a, b) => a.date - b.date);\n  };\n\n  const today = new Date();\n  const todayAppointments = getAppointmentsByDate(today);\n  const tomorrowAppointments = getAppointmentsByDate(\n    new Date(today.getTime() + 24 * 60 * 60 * 1000)\n  );\n\n  return (\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\n      <Box sx={{ p: 3 }}>\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 3 }}>\n          <Typography variant=\"h4\">Schedule</Typography>\n          <Button\n            variant=\"contained\"\n            startIcon={<Add />}\n            onClick={() => setShowNewAppointment(true)}\n          >\n            New Appointment\n          </Button>\n        </Box>\n\n        {/* Today's Schedule */}\n        <Paper sx={{ p: 2, mb: 3 }}>\n          <Typography variant=\"h6\" gutterBottom>\n            Today - {today.toLocaleDateString()}\n          </Typography>\n          {todayAppointments.length === 0 ? (\n            <Typography color=\"text.secondary\">No appointments scheduled</Typography>\n          ) : (\n            <Grid container spacing={2}>\n              {todayAppointments.map(apt => (\n                <Grid item xs={12} md={6} key={apt.id}>\n                  <Card variant=\"outlined\">\n                    <CardContent>\n                      <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\n                        <Box>\n                          <Typography variant=\"h6\">\n                            {apt.date.toLocaleTimeString([], { \n                              hour: '2-digit', \n                              minute: '2-digit' \n                            })}\n                          </Typography>\n                          <Typography>{apt.patientName}</Typography>\n                          <Box sx={{ mt: 1, display: 'flex', gap: 1 }}>\n                            <Chip \n                              label={apt.type} \n                              size=\"small\" \n                              color={apt.type === 'intake' ? 'primary' : 'default'}\n                            />\n                            <Chip \n                              label={`${apt.duration} min`} \n                              size=\"small\" \n                            />\n                          </Box>\n                        </Box>\n                        {apt.status === 'confirmed' && (\n                          <IconButton \n                            color=\"error\" \n                            onClick={() => handleCancelAppointment(apt.id)}\n                          >\n                            <Cancel />\n                          </IconButton>\n                        )}\n                      </Box>\n                    </CardContent>\n                  </Card>\n                </Grid>\n              ))}\n            </Grid>\n          )}\n        </Paper>\n\n        {/* Tomorrow's Schedule */}\n        <Paper sx={{ p: 2 }}>\n          <Typography variant=\"h6\" gutterBottom>\n            Tomorrow\n          </Typography>\n          {tomorrowAppointments.length === 0 ? (\n            <Typography color=\"text.secondary\">No appointments scheduled</Typography>\n          ) : (\n            <Grid container spacing={2}>\n              {tomorrowAppointments.map(apt => (\n                <Grid item xs={12} md={6} key={apt.id}>\n                  <Card variant=\"outlined\">\n                    <CardContent>\n                      <Typography variant=\"subtitle1\">\n                        {apt.date.toLocaleTimeString([], { \n                          hour: '2-digit', \n                          minute: '2-digit' \n                        })} - {apt.patientName}\n                      </Typography>\n                    </CardContent>\n                  </Card>\n                </Grid>\n              ))}\n            </Grid>\n          )}\n        </Paper>\n\n        {/* New Appointment Dialog */}\n        <Dialog \n          open={showNewAppointment} \n          onClose={() => setShowNewAppointment(false)}\n          maxWidth=\"sm\"\n          fullWidth\n        >\n          <DialogTitle>Schedule New Appointment</DialogTitle>\n          <DialogContent>\n            <Box sx={{ pt: 2, display: 'flex', flexDirection: 'column', gap: 2 }}>\n              <TextField\n                fullWidth\n                label=\"Patient Name\"\n                value={newAppointment.patientName}\n                onChange={(e) => setNewAppointment({\n                  ...newAppointment,\n                  patientName: e.target.value\n                })}\n              />\n\n              <DatePicker\n                label=\"Date\"\n                value={newAppointment.date}\n                onChange={(date) => setNewAppointment({\n                  ...newAppointment,\n                  date\n                })}\n                renderInput={(params) => <TextField {...params} fullWidth />}\n              />\n\n              <TimePicker\n                label=\"Time\"\n                value={newAppointment.time}\n                onChange={(time) => setNewAppointment({\n                  ...newAppointment,\n                  time\n                })}\n                renderInput={(params) => <TextField {...params} fullWidth />}\n              />\n\n              <FormControl fullWidth>\n                <InputLabel>Appointment Type</InputLabel>\n                <Select\n                  value={newAppointment.type}\n                  onChange={(e) => setNewAppointment({\n                    ...newAppointment,\n                    type: e.target.value\n                  })}\n                  label=\"Appointment Type\"\n                >\n                  <MenuItem value=\"session\">Regular Session</MenuItem>\n                  <MenuItem value=\"intake\">Intake Session</MenuItem>\n                  <MenuItem value=\"crisis\">Crisis Session</MenuItem>\n                </Select>\n              </FormControl>\n\n              <FormControl fullWidth>\n                <InputLabel>Duration</InputLabel>\n                <Select\n                  value={newAppointment.duration}\n                  onChange={(e) => setNewAppointment({\n                    ...newAppointment,\n                    duration: e.target.value\n                  })}\n                  label=\"Duration\"\n                >\n                  <MenuItem value={30}>30 minutes</MenuItem>\n                  <MenuItem value={50}>50 minutes</MenuItem>\n                  <MenuItem value={60}>60 minutes</MenuItem>\n                  <MenuItem value={90}>90 minutes</MenuItem>\n                </Select>\n              </FormControl>\n\n              <Box sx={{ display: 'flex', gap: 2, mt: 2 }}>\n                <Button \n                  variant=\"contained\" \n                  onClick={handleCreateAppointment}\n                  disabled={!newAppointment.patientName}\n                  fullWidth\n                >\n                  Schedule\n                </Button>\n                <Button \n                  variant=\"outlined\" \n                  onClick={() => setShowNewAppointment(false)}\n                  fullWidth\n                >\n                  Cancel\n                </Button>\n              </Box>\n            </Box>\n          </DialogContent>\n        </Dialog>\n      </Box>\n    </LocalizationProvider>\n  );\n}\n\n// What we're NOT building:\n// - Complex recurring appointments (too complex)\n// - Multi-therapist scheduling (solo practice focus)\n// - Waitlist management (overengineering)\n// - Appointment reminders (can add later)\n// - Calendar sync (privacy concerns)\n// - Resource scheduling (rooms, equipment)\n// Just simple appointment booking"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}