{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brian\\\\OneDrive\\\\Desktop\\\\shadow-sidekick-sqlite-vss-poc\\\\haven-mental-health\\\\src\\\\messaging\\\\secure-chat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Box, TextField, IconButton, Paper, Typography, List, ListItem, Avatar, Chip, Alert } from '@mui/material';\nimport { Send, Lock, Warning, ArrowBack } from '@mui/icons-material';\nimport { useEncryption } from '../encryption/encryption-hook';\nimport { useP2P } from '../p2p/p2p-hook';\nimport { useParams, useNavigate } from 'react-router-dom';\n\n/**\n * Secure Chat Component - The core of our platform\n * End-to-end encrypted messaging between therapist and patient\n * No group chats, no channels, no complexity\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function SecureChat() {\n  _s();\n  const {\n    patientId\n  } = useParams();\n  const navigate = useNavigate();\n  const [messages, setMessages] = useState([]);\n\n  // Mock patient data - in real app would fetch from API\n  const patientName = patientId === 'patient-1' ? 'Jane Doe' : patientId === 'patient-2' ? 'John Smith' : patientId === 'patient-3' ? 'Mary Johnson' : 'Patient';\n  const [newMessage, setNewMessage] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const [phiWarning, setPhiWarning] = useState(false);\n  const messagesEndRef = useRef(null);\n  const {\n    encrypt,\n    decrypt\n  } = useEncryption();\n  const {\n    sendMessage,\n    onMessage,\n    isConnected\n  } = useP2P(patientId);\n  useEffect(() => {\n    // Listen for incoming messages\n    const unsubscribe = onMessage(async encryptedMsg => {\n      const decrypted = await decrypt(encryptedMsg);\n      setMessages(prev => [...prev, {\n        id: Date.now(),\n        text: decrypted.text,\n        sender: 'patient',\n        timestamp: new Date(),\n        encrypted: true\n      }]);\n    });\n    return unsubscribe;\n  }, [decrypt, onMessage]);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    // Auto-scroll to bottom\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n\n  // Simple PHI detection (real implementation would be more sophisticated)\n  const detectPHI = text => {\n    const phiPatterns = [/\\b\\d{3}-\\d{2}-\\d{4}\\b/,\n    // SSN\n    /\\b\\d{3}-\\d{3}-\\d{4}\\b/,\n    // Phone\n    /\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}\\b/,\n    // Email\n    /\\b(ssn|social security|dob|date of birth)\\b/i];\n    return phiPatterns.some(pattern => pattern.test(text));\n  };\n  const handleSend = async () => {\n    if (!newMessage.trim() || !isConnected) return;\n\n    // Check for PHI\n    if (detectPHI(newMessage)) {\n      setPhiWarning(true);\n      setTimeout(() => setPhiWarning(false), 5000);\n    }\n\n    // Encrypt and send\n    const encrypted = await encrypt({\n      text: newMessage,\n      timestamp: Date.now(),\n      type: 'message'\n    });\n    await sendMessage(encrypted);\n\n    // Add to local messages\n    setMessages(prev => [...prev, {\n      id: Date.now(),\n      text: newMessage,\n      sender: 'therapist',\n      timestamp: new Date(),\n      encrypted: true\n    }]);\n    setNewMessage('');\n  };\n  const handleBack = () => {\n    navigate(-1);\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    sx: {\n      height: '600px',\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 2,\n        borderBottom: 1,\n        borderColor: 'divider',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleBack,\n          children: /*#__PURE__*/_jsxDEV(ArrowBack, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n          children: patientName[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: patientName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(Lock, {\n          fontSize: \"small\",\n          color: \"success\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"caption\",\n          color: \"success.main\",\n          children: \"End-to-End Encrypted\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), phiWarning && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"warning\",\n      sx: {\n        m: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"PHI Detected:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this), \" This message may contain sensitive information. It will be encrypted and logged per HIPAA requirements.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      sx: {\n        flex: 1,\n        overflow: 'auto',\n        p: 2\n      },\n      children: [messages.map(msg => /*#__PURE__*/_jsxDEV(ListItem, {\n        sx: {\n          flexDirection: msg.sender === 'therapist' ? 'row-reverse' : 'row',\n          gap: 1,\n          mb: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 2,\n            maxWidth: '70%',\n            bgcolor: msg.sender === 'therapist' ? 'primary.light' : 'grey.100'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            children: msg.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            color: \"text.secondary\",\n            children: msg.timestamp.toLocaleTimeString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this)\n      }, msg.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 2,\n        borderTop: 1,\n        borderColor: 'divider'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          gap: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          placeholder: \"Type a secure message...\",\n          value: newMessage,\n          onChange: e => setNewMessage(e.target.value),\n          onKeyPress: e => e.key === 'Enter' && !e.shiftKey && handleSend(),\n          multiline: true,\n          maxRows: 3,\n          disabled: !isConnected\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"primary\",\n          onClick: handleSend,\n          disabled: !isConnected || !newMessage.trim(),\n          children: /*#__PURE__*/_jsxDEV(Send, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), !isConnected && /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"caption\",\n        color: \"error\",\n        sx: {\n          mt: 1\n        },\n        children: \"Connection lost. Messages will be sent when connection is restored.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n}\n\n// What this component does NOT do:\n// - Group messaging (too complex for MVP)\n// - File attachments (security complexity)\n// - Voice notes (HIPAA complexity)\n// - Reactions/emojis (not professional)\n// - Read receipts (privacy concerns)\n// - Message editing (audit trail issues)\n// Just simple, secure, therapist-patient messaging.\n_s(SecureChat, \"w4c9Viy11RLzLM8FJrnPxPkG7QU=\", false, function () {\n  return [useParams, useNavigate, useEncryption, useP2P];\n});\n_c = SecureChat;\nvar _c;\n$RefreshReg$(_c, \"SecureChat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Box","TextField","IconButton","Paper","Typography","List","ListItem","Avatar","Chip","Alert","Send","Lock","Warning","ArrowBack","useEncryption","useP2P","useParams","useNavigate","jsxDEV","_jsxDEV","SecureChat","_s","patientId","navigate","messages","setMessages","patientName","newMessage","setNewMessage","isTyping","setIsTyping","phiWarning","setPhiWarning","messagesEndRef","encrypt","decrypt","sendMessage","onMessage","isConnected","unsubscribe","encryptedMsg","decrypted","prev","id","Date","now","text","sender","timestamp","encrypted","_messagesEndRef$curre","current","scrollIntoView","behavior","detectPHI","phiPatterns","some","pattern","test","handleSend","trim","setTimeout","type","handleBack","sx","height","display","flexDirection","children","p","borderBottom","borderColor","alignItems","justifyContent","gap","onClick","fileName","_jsxFileName","lineNumber","columnNumber","variant","fontSize","color","severity","m","flex","overflow","map","msg","mb","maxWidth","bgcolor","toLocaleTimeString","ref","borderTop","fullWidth","placeholder","value","onChange","e","target","onKeyPress","key","shiftKey","multiline","maxRows","disabled","mt","_c","$RefreshReg$"],"sources":["C:/Users/brian/OneDrive/Desktop/shadow-sidekick-sqlite-vss-poc/haven-mental-health/src/messaging/secure-chat.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { \n  Box, \n  TextField, \n  IconButton, \n  Paper, \n  Typography, \n  List, \n  ListItem,\n  Avatar,\n  Chip,\n  Alert\n} from '@mui/material';\nimport { Send, Lock, Warning, ArrowBack } from '@mui/icons-material';\nimport { useEncryption } from '../encryption/encryption-hook';\nimport { useP2P } from '../p2p/p2p-hook';\nimport { useParams, useNavigate } from 'react-router-dom';\n\n/**\n * Secure Chat Component - The core of our platform\n * End-to-end encrypted messaging between therapist and patient\n * No group chats, no channels, no complexity\n */\nexport function SecureChat() {\n  const { patientId } = useParams();\n  const navigate = useNavigate();\n  const [messages, setMessages] = useState([]);\n  \n  // Mock patient data - in real app would fetch from API\n  const patientName = patientId === 'patient-1' ? 'Jane Doe' : \n                     patientId === 'patient-2' ? 'John Smith' : \n                     patientId === 'patient-3' ? 'Mary Johnson' : 'Patient';\n  const [newMessage, setNewMessage] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const [phiWarning, setPhiWarning] = useState(false);\n  const messagesEndRef = useRef(null);\n  \n  const { encrypt, decrypt } = useEncryption();\n  const { sendMessage, onMessage, isConnected } = useP2P(patientId);\n\n  useEffect(() => {\n    // Listen for incoming messages\n    const unsubscribe = onMessage(async (encryptedMsg) => {\n      const decrypted = await decrypt(encryptedMsg);\n      setMessages(prev => [...prev, {\n        id: Date.now(),\n        text: decrypted.text,\n        sender: 'patient',\n        timestamp: new Date(),\n        encrypted: true\n      }]);\n    });\n\n    return unsubscribe;\n  }, [decrypt, onMessage]);\n\n  useEffect(() => {\n    // Auto-scroll to bottom\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n\n  // Simple PHI detection (real implementation would be more sophisticated)\n  const detectPHI = (text) => {\n    const phiPatterns = [\n      /\\b\\d{3}-\\d{2}-\\d{4}\\b/, // SSN\n      /\\b\\d{3}-\\d{3}-\\d{4}\\b/, // Phone\n      /\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}\\b/, // Email\n      /\\b(ssn|social security|dob|date of birth)\\b/i,\n    ];\n    \n    return phiPatterns.some(pattern => pattern.test(text));\n  };\n\n  const handleSend = async () => {\n    if (!newMessage.trim() || !isConnected) return;\n\n    // Check for PHI\n    if (detectPHI(newMessage)) {\n      setPhiWarning(true);\n      setTimeout(() => setPhiWarning(false), 5000);\n    }\n\n    // Encrypt and send\n    const encrypted = await encrypt({\n      text: newMessage,\n      timestamp: Date.now(),\n      type: 'message'\n    });\n\n    await sendMessage(encrypted);\n\n    // Add to local messages\n    setMessages(prev => [...prev, {\n      id: Date.now(),\n      text: newMessage,\n      sender: 'therapist',\n      timestamp: new Date(),\n      encrypted: true\n    }]);\n\n    setNewMessage('');\n  };\n\n  const handleBack = () => {\n    navigate(-1);\n  };\n\n  return (\n    <Paper sx={{ height: '600px', display: 'flex', flexDirection: 'column' }}>\n      {/* Header */}\n      <Box sx={{ \n        p: 2, \n        borderBottom: 1, \n        borderColor: 'divider',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between'\n      }}>\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n          <IconButton onClick={handleBack}>\n            <ArrowBack />\n          </IconButton>\n          <Avatar>{patientName[0]}</Avatar>\n          <Typography variant=\"h6\">{patientName}</Typography>\n        </Box>\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n          <Lock fontSize=\"small\" color=\"success\" />\n          <Typography variant=\"caption\" color=\"success.main\">\n            End-to-End Encrypted\n          </Typography>\n        </Box>\n      </Box>\n\n      {/* PHI Warning */}\n      {phiWarning && (\n        <Alert severity=\"warning\" sx={{ m: 2 }}>\n          <strong>PHI Detected:</strong> This message may contain sensitive information. \n          It will be encrypted and logged per HIPAA requirements.\n        </Alert>\n      )}\n\n      {/* Messages */}\n      <List sx={{ flex: 1, overflow: 'auto', p: 2 }}>\n        {messages.map((msg) => (\n          <ListItem\n            key={msg.id}\n            sx={{\n              flexDirection: msg.sender === 'therapist' ? 'row-reverse' : 'row',\n              gap: 1,\n              mb: 2\n            }}\n          >\n            <Paper\n              sx={{\n                p: 2,\n                maxWidth: '70%',\n                bgcolor: msg.sender === 'therapist' ? 'primary.light' : 'grey.100'\n              }}\n            >\n              <Typography>{msg.text}</Typography>\n              <Typography variant=\"caption\" color=\"text.secondary\">\n                {msg.timestamp.toLocaleTimeString()}\n              </Typography>\n            </Paper>\n          </ListItem>\n        ))}\n        <div ref={messagesEndRef} />\n      </List>\n\n      {/* Input */}\n      <Box sx={{ p: 2, borderTop: 1, borderColor: 'divider' }}>\n        <Box sx={{ display: 'flex', gap: 1 }}>\n          <TextField\n            fullWidth\n            placeholder=\"Type a secure message...\"\n            value={newMessage}\n            onChange={(e) => setNewMessage(e.target.value)}\n            onKeyPress={(e) => e.key === 'Enter' && !e.shiftKey && handleSend()}\n            multiline\n            maxRows={3}\n            disabled={!isConnected}\n          />\n          <IconButton \n            color=\"primary\" \n            onClick={handleSend}\n            disabled={!isConnected || !newMessage.trim()}\n          >\n            <Send />\n          </IconButton>\n        </Box>\n        \n        {!isConnected && (\n          <Typography variant=\"caption\" color=\"error\" sx={{ mt: 1 }}>\n            Connection lost. Messages will be sent when connection is restored.\n          </Typography>\n        )}\n      </Box>\n    </Paper>\n  );\n}\n\n// What this component does NOT do:\n// - Group messaging (too complex for MVP)\n// - File attachments (security complexity)\n// - Voice notes (HIPAA complexity)\n// - Reactions/emojis (not professional)\n// - Read receipts (privacy concerns)\n// - Message editing (audit trail issues)\n// Just simple, secure, therapist-patient messaging."],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SACEC,GAAG,EACHC,SAAS,EACTC,UAAU,EACVC,KAAK,EACLC,UAAU,EACVC,IAAI,EACJC,QAAQ,EACRC,MAAM,EACNC,IAAI,EACJC,KAAK,QACA,eAAe;AACtB,SAASC,IAAI,EAAEC,IAAI,EAAEC,OAAO,EAAEC,SAAS,QAAQ,qBAAqB;AACpE,SAASC,aAAa,QAAQ,+BAA+B;AAC7D,SAASC,MAAM,QAAQ,iBAAiB;AACxC,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;;AAEzD;AACA;AACA;AACA;AACA;AAJA,SAAAC,MAAA,IAAAC,OAAA;AAKA,OAAO,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAC3B,MAAM;IAAEC;EAAU,CAAC,GAAGN,SAAS,CAAC,CAAC;EACjC,MAAMO,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;;EAE5C;EACA,MAAM6B,WAAW,GAAGJ,SAAS,KAAK,WAAW,GAAG,UAAU,GACvCA,SAAS,KAAK,WAAW,GAAG,YAAY,GACxCA,SAAS,KAAK,WAAW,GAAG,cAAc,GAAG,SAAS;EACzE,MAAM,CAACK,UAAU,EAAEC,aAAa,CAAC,GAAG/B,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACgC,QAAQ,EAAEC,WAAW,CAAC,GAAGjC,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACkC,UAAU,EAAEC,aAAa,CAAC,GAAGnC,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAMoC,cAAc,GAAGlC,MAAM,CAAC,IAAI,CAAC;EAEnC,MAAM;IAAEmC,OAAO;IAAEC;EAAQ,CAAC,GAAGrB,aAAa,CAAC,CAAC;EAC5C,MAAM;IAAEsB,WAAW;IAAEC,SAAS;IAAEC;EAAY,CAAC,GAAGvB,MAAM,CAACO,SAAS,CAAC;EAEjExB,SAAS,CAAC,MAAM;IACd;IACA,MAAMyC,WAAW,GAAGF,SAAS,CAAC,MAAOG,YAAY,IAAK;MACpD,MAAMC,SAAS,GAAG,MAAMN,OAAO,CAACK,YAAY,CAAC;MAC7Cf,WAAW,CAACiB,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;QAC5BC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;QACdC,IAAI,EAAEL,SAAS,CAACK,IAAI;QACpBC,MAAM,EAAE,SAAS;QACjBC,SAAS,EAAE,IAAIJ,IAAI,CAAC,CAAC;QACrBK,SAAS,EAAE;MACb,CAAC,CAAC,CAAC;IACL,CAAC,CAAC;IAEF,OAAOV,WAAW;EACpB,CAAC,EAAE,CAACJ,OAAO,EAAEE,SAAS,CAAC,CAAC;EAExBvC,SAAS,CAAC,MAAM;IAAA,IAAAoD,qBAAA;IACd;IACA,CAAAA,qBAAA,GAAAjB,cAAc,CAACkB,OAAO,cAAAD,qBAAA,uBAAtBA,qBAAA,CAAwBE,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EAChE,CAAC,EAAE,CAAC7B,QAAQ,CAAC,CAAC;;EAEd;EACA,MAAM8B,SAAS,GAAIR,IAAI,IAAK;IAC1B,MAAMS,WAAW,GAAG,CAClB,uBAAuB;IAAE;IACzB,uBAAuB;IAAE;IACzB,qDAAqD;IAAE;IACvD,8CAA8C,CAC/C;IAED,OAAOA,WAAW,CAACC,IAAI,CAACC,OAAO,IAAIA,OAAO,CAACC,IAAI,CAACZ,IAAI,CAAC,CAAC;EACxD,CAAC;EAED,MAAMa,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI,CAAChC,UAAU,CAACiC,IAAI,CAAC,CAAC,IAAI,CAACtB,WAAW,EAAE;;IAExC;IACA,IAAIgB,SAAS,CAAC3B,UAAU,CAAC,EAAE;MACzBK,aAAa,CAAC,IAAI,CAAC;MACnB6B,UAAU,CAAC,MAAM7B,aAAa,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC;IAC9C;;IAEA;IACA,MAAMiB,SAAS,GAAG,MAAMf,OAAO,CAAC;MAC9BY,IAAI,EAAEnB,UAAU;MAChBqB,SAAS,EAAEJ,IAAI,CAACC,GAAG,CAAC,CAAC;MACrBiB,IAAI,EAAE;IACR,CAAC,CAAC;IAEF,MAAM1B,WAAW,CAACa,SAAS,CAAC;;IAE5B;IACAxB,WAAW,CAACiB,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;MAC5BC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;MACdC,IAAI,EAAEnB,UAAU;MAChBoB,MAAM,EAAE,WAAW;MACnBC,SAAS,EAAE,IAAIJ,IAAI,CAAC,CAAC;MACrBK,SAAS,EAAE;IACb,CAAC,CAAC,CAAC;IAEHrB,aAAa,CAAC,EAAE,CAAC;EACnB,CAAC;EAED,MAAMmC,UAAU,GAAGA,CAAA,KAAM;IACvBxC,QAAQ,CAAC,CAAC,CAAC,CAAC;EACd,CAAC;EAED,oBACEJ,OAAA,CAAChB,KAAK;IAAC6D,EAAE,EAAE;MAAEC,MAAM,EAAE,OAAO;MAAEC,OAAO,EAAE,MAAM;MAAEC,aAAa,EAAE;IAAS,CAAE;IAAAC,QAAA,gBAEvEjD,OAAA,CAACnB,GAAG;MAACgE,EAAE,EAAE;QACPK,CAAC,EAAE,CAAC;QACJC,YAAY,EAAE,CAAC;QACfC,WAAW,EAAE,SAAS;QACtBL,OAAO,EAAE,MAAM;QACfM,UAAU,EAAE,QAAQ;QACpBC,cAAc,EAAE;MAClB,CAAE;MAAAL,QAAA,gBACAjD,OAAA,CAACnB,GAAG;QAACgE,EAAE,EAAE;UAAEE,OAAO,EAAE,MAAM;UAAEM,UAAU,EAAE,QAAQ;UAAEE,GAAG,EAAE;QAAE,CAAE;QAAAN,QAAA,gBACzDjD,OAAA,CAACjB,UAAU;UAACyE,OAAO,EAAEZ,UAAW;UAAAK,QAAA,eAC9BjD,OAAA,CAACN,SAAS;YAAA+D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACb5D,OAAA,CAACZ,MAAM;UAAA6D,QAAA,EAAE1C,WAAW,CAAC,CAAC;QAAC;UAAAkD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,eACjC5D,OAAA,CAACf,UAAU;UAAC4E,OAAO,EAAC,IAAI;UAAAZ,QAAA,EAAE1C;QAAW;UAAAkD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC,eACN5D,OAAA,CAACnB,GAAG;QAACgE,EAAE,EAAE;UAAEE,OAAO,EAAE,MAAM;UAAEM,UAAU,EAAE,QAAQ;UAAEE,GAAG,EAAE;QAAE,CAAE;QAAAN,QAAA,gBACzDjD,OAAA,CAACR,IAAI;UAACsE,QAAQ,EAAC,OAAO;UAACC,KAAK,EAAC;QAAS;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACzC5D,OAAA,CAACf,UAAU;UAAC4E,OAAO,EAAC,SAAS;UAACE,KAAK,EAAC,cAAc;UAAAd,QAAA,EAAC;QAEnD;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAGLhD,UAAU,iBACTZ,OAAA,CAACV,KAAK;MAAC0E,QAAQ,EAAC,SAAS;MAACnB,EAAE,EAAE;QAAEoB,CAAC,EAAE;MAAE,CAAE;MAAAhB,QAAA,gBACrCjD,OAAA;QAAAiD,QAAA,EAAQ;MAAa;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,4GAEhC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CACR,eAGD5D,OAAA,CAACd,IAAI;MAAC2D,EAAE,EAAE;QAAEqB,IAAI,EAAE,CAAC;QAAEC,QAAQ,EAAE,MAAM;QAAEjB,CAAC,EAAE;MAAE,CAAE;MAAAD,QAAA,GAC3C5C,QAAQ,CAAC+D,GAAG,CAAEC,GAAG,iBAChBrE,OAAA,CAACb,QAAQ;QAEP0D,EAAE,EAAE;UACFG,aAAa,EAAEqB,GAAG,CAACzC,MAAM,KAAK,WAAW,GAAG,aAAa,GAAG,KAAK;UACjE2B,GAAG,EAAE,CAAC;UACNe,EAAE,EAAE;QACN,CAAE;QAAArB,QAAA,eAEFjD,OAAA,CAAChB,KAAK;UACJ6D,EAAE,EAAE;YACFK,CAAC,EAAE,CAAC;YACJqB,QAAQ,EAAE,KAAK;YACfC,OAAO,EAAEH,GAAG,CAACzC,MAAM,KAAK,WAAW,GAAG,eAAe,GAAG;UAC1D,CAAE;UAAAqB,QAAA,gBAEFjD,OAAA,CAACf,UAAU;YAAAgE,QAAA,EAAEoB,GAAG,CAAC1C;UAAI;YAAA8B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAa,CAAC,eACnC5D,OAAA,CAACf,UAAU;YAAC4E,OAAO,EAAC,SAAS;YAACE,KAAK,EAAC,gBAAgB;YAAAd,QAAA,EACjDoB,GAAG,CAACxC,SAAS,CAAC4C,kBAAkB,CAAC;UAAC;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR;MAAC,GAlBHS,GAAG,CAAC7C,EAAE;QAAAiC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAmBH,CACX,CAAC,eACF5D,OAAA;QAAK0E,GAAG,EAAE5D;MAAe;QAAA2C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eAGP5D,OAAA,CAACnB,GAAG;MAACgE,EAAE,EAAE;QAAEK,CAAC,EAAE,CAAC;QAAEyB,SAAS,EAAE,CAAC;QAAEvB,WAAW,EAAE;MAAU,CAAE;MAAAH,QAAA,gBACtDjD,OAAA,CAACnB,GAAG;QAACgE,EAAE,EAAE;UAAEE,OAAO,EAAE,MAAM;UAAEQ,GAAG,EAAE;QAAE,CAAE;QAAAN,QAAA,gBACnCjD,OAAA,CAAClB,SAAS;UACR8F,SAAS;UACTC,WAAW,EAAC,0BAA0B;UACtCC,KAAK,EAAEtE,UAAW;UAClBuE,QAAQ,EAAGC,CAAC,IAAKvE,aAAa,CAACuE,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAC/CI,UAAU,EAAGF,CAAC,IAAKA,CAAC,CAACG,GAAG,KAAK,OAAO,IAAI,CAACH,CAAC,CAACI,QAAQ,IAAI5C,UAAU,CAAC,CAAE;UACpE6C,SAAS;UACTC,OAAO,EAAE,CAAE;UACXC,QAAQ,EAAE,CAACpE;QAAY;UAAAsC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxB,CAAC,eACF5D,OAAA,CAACjB,UAAU;UACTgF,KAAK,EAAC,SAAS;UACfP,OAAO,EAAEhB,UAAW;UACpB+C,QAAQ,EAAE,CAACpE,WAAW,IAAI,CAACX,UAAU,CAACiC,IAAI,CAAC,CAAE;UAAAQ,QAAA,eAE7CjD,OAAA,CAACT,IAAI;YAAAkE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC,EAEL,CAACzC,WAAW,iBACXnB,OAAA,CAACf,UAAU;QAAC4E,OAAO,EAAC,SAAS;QAACE,KAAK,EAAC,OAAO;QAAClB,EAAE,EAAE;UAAE2C,EAAE,EAAE;QAAE,CAAE;QAAAvC,QAAA,EAAC;MAE3D;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CACb;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA1D,EAAA,CAzLgBD,UAAU;EAAA,QACFJ,SAAS,EACdC,WAAW,EAYCH,aAAa,EACMC,MAAM;AAAA;AAAA6F,EAAA,GAfxCxF,UAAU;AAAA,IAAAwF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}