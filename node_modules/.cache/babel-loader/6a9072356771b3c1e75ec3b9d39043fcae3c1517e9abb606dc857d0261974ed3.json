{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brian\\\\OneDrive\\\\Desktop\\\\shadow-sidekick-sqlite-vss-poc\\\\haven-mental-health\\\\src\\\\video\\\\video-session.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Box, Paper, Typography, Button, IconButton, Alert, Dialog, DialogTitle, DialogContent, TextField } from '@mui/material';\nimport { Videocam, VideocamOff, Mic, MicOff, CallEnd, ScreenShare, StopScreenShare, Lock, Warning } from '@mui/icons-material';\nimport { useP2P } from '../p2p/p2p-hook';\n\n/**\n * Video Session Component - Simple, secure video therapy\n * WebRTC peer-to-peer, no recording, no fancy features\n * Just reliable video calls between therapist and patient\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function VideoSession({\n  sessionId,\n  patientName\n}) {\n  _s();\n  const localVideoRef = useRef(null);\n  const remoteVideoRef = useRef(null);\n  const [localStream, setLocalStream] = useState(null);\n  const [remoteStream, setRemoteStream] = useState(null);\n  const [isVideoOn, setIsVideoOn] = useState(true);\n  const [isAudioOn, setIsAudioOn] = useState(true);\n  const [isScreenSharing, setIsScreenSharing] = useState(false);\n  const [connectionStatus, setConnectionStatus] = useState('connecting');\n  const [sessionNotes, setSessionNotes] = useState('');\n  const [showEndDialog, setShowEndDialog] = useState(false);\n  const {\n    startCall,\n    endCall,\n    toggleVideo,\n    toggleAudio,\n    onRemoteStream,\n    connectionState\n  } = useP2P(sessionId);\n  useEffect(() => {\n    // Initialize video call\n    initializeCall();\n    return () => {\n      // Cleanup on unmount\n      if (localStream) {\n        localStream.getTracks().forEach(track => track.stop());\n      }\n    };\n  }, []);\n  useEffect(() => {\n    // Handle remote stream\n    const unsubscribe = onRemoteStream(stream => {\n      setRemoteStream(stream);\n      if (remoteVideoRef.current) {\n        remoteVideoRef.current.srcObject = stream;\n      }\n    });\n    return unsubscribe;\n  }, [onRemoteStream]);\n  const initializeCall = async () => {\n    try {\n      // Get user media\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: {\n          width: {\n            ideal: 1280\n          },\n          height: {\n            ideal: 720\n          }\n        },\n        audio: {\n          echoCancellation: true,\n          noiseSuppression: true,\n          autoGainControl: true\n        }\n      });\n      setLocalStream(stream);\n      if (localVideoRef.current) {\n        localVideoRef.current.srcObject = stream;\n      }\n\n      // Start the call\n      await startCall(stream);\n      setConnectionStatus('connected');\n    } catch (error) {\n      console.error('Failed to initialize call:', error);\n      setConnectionStatus('failed');\n    }\n  };\n  const handleToggleVideo = () => {\n    if (localStream) {\n      const videoTrack = localStream.getVideoTracks()[0];\n      if (videoTrack) {\n        videoTrack.enabled = !videoTrack.enabled;\n        setIsVideoOn(videoTrack.enabled);\n        toggleVideo();\n      }\n    }\n  };\n  const handleToggleAudio = () => {\n    if (localStream) {\n      const audioTrack = localStream.getAudioTracks()[0];\n      if (audioTrack) {\n        audioTrack.enabled = !audioTrack.enabled;\n        setIsAudioOn(audioTrack.enabled);\n        toggleAudio();\n      }\n    }\n  };\n  const handleScreenShare = async () => {\n    if (!isScreenSharing) {\n      try {\n        const screenStream = await navigator.mediaDevices.getDisplayMedia({\n          video: true,\n          audio: false\n        });\n\n        // Replace video track with screen share\n        const screenTrack = screenStream.getVideoTracks()[0];\n        // In real implementation, would get peer connection from P2P service\n        // For now, just log the action\n        console.log('Would share screen with track:', screenTrack);\n        screenTrack.onended = () => {\n          handleStopScreenShare();\n        };\n        setIsScreenSharing(true);\n      } catch (error) {\n        console.error('Failed to share screen:', error);\n      }\n    } else {\n      handleStopScreenShare();\n    }\n  };\n  const handleStopScreenShare = () => {\n    // Return to camera\n    const videoTrack = localStream.getVideoTracks()[0];\n    // In real implementation, would get peer connection from P2P service\n    console.log('Would stop screen share and return to video:', videoTrack);\n    setIsScreenSharing(false);\n  };\n  const handleEndCall = () => {\n    setShowEndDialog(true);\n  };\n  const confirmEndCall = () => {\n    // Stop all tracks\n    if (localStream) {\n      localStream.getTracks().forEach(track => track.stop());\n    }\n\n    // End the call\n    endCall();\n\n    // Save session notes if any\n    if (sessionNotes) {\n      // In real app, this would save to secure backend\n      localStorage.setItem(`session-${sessionId}-notes`, sessionNotes);\n    }\n\n    // Navigate back to dashboard\n    window.location.href = '/';\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      height: '100vh',\n      bgcolor: 'grey.900',\n      position: 'relative'\n    },\n    children: [connectionStatus !== 'connected' && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"warning\",\n      sx: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0\n      },\n      children: connectionStatus === 'connecting' ? 'Connecting to secure session...' : 'Connection failed'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        height: '100%',\n        display: 'flex',\n        p: 2,\n        gap: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          flex: 1,\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          ref: remoteVideoRef,\n          autoPlay: true,\n          playsInline: true,\n          style: {\n            width: '100%',\n            height: '100%',\n            objectFit: 'cover',\n            borderRadius: 8,\n            backgroundColor: '#000'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            position: 'absolute',\n            top: 16,\n            left: 16,\n            display: 'flex',\n            alignItems: 'center',\n            gap: 1,\n            bgcolor: 'rgba(0,0,0,0.6)',\n            p: 1,\n            borderRadius: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            color: \"white\",\n            children: patientName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Lock, {\n            fontSize: \"small\",\n            sx: {\n              color: 'success.light'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          position: 'absolute',\n          bottom: 100,\n          right: 20,\n          width: 240,\n          height: 180\n        },\n        children: /*#__PURE__*/_jsxDEV(\"video\", {\n          ref: localVideoRef,\n          autoPlay: true,\n          muted: true,\n          playsInline: true,\n          style: {\n            width: '100%',\n            height: '100%',\n            objectFit: 'cover',\n            borderRadius: 8,\n            backgroundColor: '#000',\n            border: '2px solid #fff'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        position: 'absolute',\n        bottom: 0,\n        left: 0,\n        right: 0,\n        p: 2,\n        display: 'flex',\n        justifyContent: 'center',\n        gap: 2,\n        borderRadius: 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: handleToggleVideo,\n        color: isVideoOn ? 'default' : 'error',\n        sx: {\n          bgcolor: 'action.hover'\n        },\n        children: isVideoOn ? /*#__PURE__*/_jsxDEV(Videocam, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 24\n        }, this) : /*#__PURE__*/_jsxDEV(VideocamOff, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: handleToggleAudio,\n        color: isAudioOn ? 'default' : 'error',\n        sx: {\n          bgcolor: 'action.hover'\n        },\n        children: isAudioOn ? /*#__PURE__*/_jsxDEV(Mic, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 24\n        }, this) : /*#__PURE__*/_jsxDEV(MicOff, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: handleScreenShare,\n        color: isScreenSharing ? 'primary' : 'default',\n        sx: {\n          bgcolor: 'action.hover'\n        },\n        children: isScreenSharing ? /*#__PURE__*/_jsxDEV(StopScreenShare, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 30\n        }, this) : /*#__PURE__*/_jsxDEV(ScreenShare, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 52\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"error\",\n        onClick: handleEndCall,\n        startIcon: /*#__PURE__*/_jsxDEV(CallEnd, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 22\n        }, this),\n        children: \"End Session\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: showEndDialog,\n      onClose: () => setShowEndDialog(false),\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"End Video Session?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          multiline: true,\n          rows: 4,\n          label: \"Quick session notes (optional)\",\n          value: sessionNotes,\n          onChange: e => setSessionNotes(e.target.value),\n          placeholder: \"Any important observations from this session...\",\n          sx: {\n            mb: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            gap: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"error\",\n            onClick: confirmEndCall,\n            fullWidth: true,\n            children: \"End Session\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            onClick: () => setShowEndDialog(false),\n            fullWidth: true,\n            children: \"Continue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 5\n  }, this);\n}\n\n// What we're NOT implementing:\n// - Recording (legal/privacy complexity)\n// - Virtual backgrounds (not essential)\n// - Breakout rooms (not needed for 1:1)\n// - Chat during video (distraction)\n// - Reactions/emojis (not professional)\n// - Whiteboard (scope creep)\n// Just simple, secure video therapy\n_s(VideoSession, \"1vjvgw1oXHtbN0KA3hf3orHG2aE=\", false, function () {\n  return [useP2P];\n});\n_c = VideoSession;\nvar _c;\n$RefreshReg$(_c, \"VideoSession\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Box","Paper","Typography","Button","IconButton","Alert","Dialog","DialogTitle","DialogContent","TextField","Videocam","VideocamOff","Mic","MicOff","CallEnd","ScreenShare","StopScreenShare","Lock","Warning","useP2P","jsxDEV","_jsxDEV","VideoSession","sessionId","patientName","_s","localVideoRef","remoteVideoRef","localStream","setLocalStream","remoteStream","setRemoteStream","isVideoOn","setIsVideoOn","isAudioOn","setIsAudioOn","isScreenSharing","setIsScreenSharing","connectionStatus","setConnectionStatus","sessionNotes","setSessionNotes","showEndDialog","setShowEndDialog","startCall","endCall","toggleVideo","toggleAudio","onRemoteStream","connectionState","initializeCall","getTracks","forEach","track","stop","unsubscribe","stream","current","srcObject","navigator","mediaDevices","getUserMedia","video","width","ideal","height","audio","echoCancellation","noiseSuppression","autoGainControl","error","console","handleToggleVideo","videoTrack","getVideoTracks","enabled","handleToggleAudio","audioTrack","getAudioTracks","handleScreenShare","screenStream","getDisplayMedia","screenTrack","log","onended","handleStopScreenShare","handleEndCall","confirmEndCall","localStorage","setItem","window","location","href","sx","bgcolor","position","children","severity","top","left","right","fileName","_jsxFileName","lineNumber","columnNumber","display","p","gap","flex","ref","autoPlay","playsInline","style","objectFit","borderRadius","backgroundColor","alignItems","color","fontSize","bottom","muted","border","justifyContent","onClick","variant","startIcon","open","onClose","fullWidth","multiline","rows","label","value","onChange","e","target","placeholder","mb","_c","$RefreshReg$"],"sources":["C:/Users/brian/OneDrive/Desktop/shadow-sidekick-sqlite-vss-poc/haven-mental-health/src/video/video-session.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport {\n  Box,\n  Paper,\n  Typography,\n  Button,\n  IconButton,\n  Alert,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  TextField\n} from '@mui/material';\nimport {\n  Videocam,\n  VideocamOff,\n  Mic,\n  MicOff,\n  CallEnd,\n  ScreenShare,\n  StopScreenShare,\n  Lock,\n  Warning\n} from '@mui/icons-material';\nimport { useP2P } from '../p2p/p2p-hook';\n\n/**\n * Video Session Component - Simple, secure video therapy\n * WebRTC peer-to-peer, no recording, no fancy features\n * Just reliable video calls between therapist and patient\n */\nexport function VideoSession({ sessionId, patientName }) {\n  const localVideoRef = useRef(null);\n  const remoteVideoRef = useRef(null);\n  const [localStream, setLocalStream] = useState(null);\n  const [remoteStream, setRemoteStream] = useState(null);\n  \n  const [isVideoOn, setIsVideoOn] = useState(true);\n  const [isAudioOn, setIsAudioOn] = useState(true);\n  const [isScreenSharing, setIsScreenSharing] = useState(false);\n  const [connectionStatus, setConnectionStatus] = useState('connecting');\n  const [sessionNotes, setSessionNotes] = useState('');\n  const [showEndDialog, setShowEndDialog] = useState(false);\n  \n  const { \n    startCall, \n    endCall, \n    toggleVideo, \n    toggleAudio, \n    onRemoteStream,\n    connectionState \n  } = useP2P(sessionId);\n\n  useEffect(() => {\n    // Initialize video call\n    initializeCall();\n    \n    return () => {\n      // Cleanup on unmount\n      if (localStream) {\n        localStream.getTracks().forEach(track => track.stop());\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    // Handle remote stream\n    const unsubscribe = onRemoteStream((stream) => {\n      setRemoteStream(stream);\n      if (remoteVideoRef.current) {\n        remoteVideoRef.current.srcObject = stream;\n      }\n    });\n\n    return unsubscribe;\n  }, [onRemoteStream]);\n\n  const initializeCall = async () => {\n    try {\n      // Get user media\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: {\n          width: { ideal: 1280 },\n          height: { ideal: 720 }\n        },\n        audio: {\n          echoCancellation: true,\n          noiseSuppression: true,\n          autoGainControl: true\n        }\n      });\n\n      setLocalStream(stream);\n      if (localVideoRef.current) {\n        localVideoRef.current.srcObject = stream;\n      }\n\n      // Start the call\n      await startCall(stream);\n      setConnectionStatus('connected');\n    } catch (error) {\n      console.error('Failed to initialize call:', error);\n      setConnectionStatus('failed');\n    }\n  };\n\n  const handleToggleVideo = () => {\n    if (localStream) {\n      const videoTrack = localStream.getVideoTracks()[0];\n      if (videoTrack) {\n        videoTrack.enabled = !videoTrack.enabled;\n        setIsVideoOn(videoTrack.enabled);\n        toggleVideo();\n      }\n    }\n  };\n\n  const handleToggleAudio = () => {\n    if (localStream) {\n      const audioTrack = localStream.getAudioTracks()[0];\n      if (audioTrack) {\n        audioTrack.enabled = !audioTrack.enabled;\n        setIsAudioOn(audioTrack.enabled);\n        toggleAudio();\n      }\n    }\n  };\n\n  const handleScreenShare = async () => {\n    if (!isScreenSharing) {\n      try {\n        const screenStream = await navigator.mediaDevices.getDisplayMedia({\n          video: true,\n          audio: false\n        });\n\n        // Replace video track with screen share\n        const screenTrack = screenStream.getVideoTracks()[0];\n        // In real implementation, would get peer connection from P2P service\n        // For now, just log the action\n        console.log('Would share screen with track:', screenTrack);\n        screenTrack.onended = () => {\n          handleStopScreenShare();\n        };\n\n        setIsScreenSharing(true);\n      } catch (error) {\n        console.error('Failed to share screen:', error);\n      }\n    } else {\n      handleStopScreenShare();\n    }\n  };\n\n  const handleStopScreenShare = () => {\n    // Return to camera\n    const videoTrack = localStream.getVideoTracks()[0];\n    // In real implementation, would get peer connection from P2P service\n    console.log('Would stop screen share and return to video:', videoTrack);\n    \n    setIsScreenSharing(false);\n  };\n\n  const handleEndCall = () => {\n    setShowEndDialog(true);\n  };\n\n  const confirmEndCall = () => {\n    // Stop all tracks\n    if (localStream) {\n      localStream.getTracks().forEach(track => track.stop());\n    }\n    \n    // End the call\n    endCall();\n    \n    // Save session notes if any\n    if (sessionNotes) {\n      // In real app, this would save to secure backend\n      localStorage.setItem(`session-${sessionId}-notes`, sessionNotes);\n    }\n    \n    // Navigate back to dashboard\n    window.location.href = '/';\n  };\n\n  return (\n    <Box sx={{ height: '100vh', bgcolor: 'grey.900', position: 'relative' }}>\n      {/* Connection Status */}\n      {connectionStatus !== 'connected' && (\n        <Alert severity=\"warning\" sx={{ position: 'absolute', top: 0, left: 0, right: 0 }}>\n          {connectionStatus === 'connecting' ? 'Connecting to secure session...' : 'Connection failed'}\n        </Alert>\n      )}\n\n      {/* Main Video Area */}\n      <Box sx={{ height: '100%', display: 'flex', p: 2, gap: 2 }}>\n        {/* Remote Video (Main) */}\n        <Box sx={{ flex: 1, position: 'relative' }}>\n          <video\n            ref={remoteVideoRef}\n            autoPlay\n            playsInline\n            style={{\n              width: '100%',\n              height: '100%',\n              objectFit: 'cover',\n              borderRadius: 8,\n              backgroundColor: '#000'\n            }}\n          />\n          <Box sx={{ \n            position: 'absolute', \n            top: 16, \n            left: 16,\n            display: 'flex',\n            alignItems: 'center',\n            gap: 1,\n            bgcolor: 'rgba(0,0,0,0.6)',\n            p: 1,\n            borderRadius: 2\n          }}>\n            <Typography color=\"white\">{patientName}</Typography>\n            <Lock fontSize=\"small\" sx={{ color: 'success.light' }} />\n          </Box>\n        </Box>\n\n        {/* Local Video (PiP) */}\n        <Box sx={{ \n          position: 'absolute', \n          bottom: 100, \n          right: 20,\n          width: 240,\n          height: 180\n        }}>\n          <video\n            ref={localVideoRef}\n            autoPlay\n            muted\n            playsInline\n            style={{\n              width: '100%',\n              height: '100%',\n              objectFit: 'cover',\n              borderRadius: 8,\n              backgroundColor: '#000',\n              border: '2px solid #fff'\n            }}\n          />\n        </Box>\n      </Box>\n\n      {/* Controls */}\n      <Paper sx={{ \n        position: 'absolute', \n        bottom: 0, \n        left: 0, \n        right: 0,\n        p: 2,\n        display: 'flex',\n        justifyContent: 'center',\n        gap: 2,\n        borderRadius: 0\n      }}>\n        <IconButton\n          onClick={handleToggleVideo}\n          color={isVideoOn ? 'default' : 'error'}\n          sx={{ bgcolor: 'action.hover' }}\n        >\n          {isVideoOn ? <Videocam /> : <VideocamOff />}\n        </IconButton>\n\n        <IconButton\n          onClick={handleToggleAudio}\n          color={isAudioOn ? 'default' : 'error'}\n          sx={{ bgcolor: 'action.hover' }}\n        >\n          {isAudioOn ? <Mic /> : <MicOff />}\n        </IconButton>\n\n        <IconButton\n          onClick={handleScreenShare}\n          color={isScreenSharing ? 'primary' : 'default'}\n          sx={{ bgcolor: 'action.hover' }}\n        >\n          {isScreenSharing ? <StopScreenShare /> : <ScreenShare />}\n        </IconButton>\n\n        <Button\n          variant=\"contained\"\n          color=\"error\"\n          onClick={handleEndCall}\n          startIcon={<CallEnd />}\n        >\n          End Session\n        </Button>\n      </Paper>\n\n      {/* End Call Dialog */}\n      <Dialog open={showEndDialog} onClose={() => setShowEndDialog(false)}>\n        <DialogTitle>End Video Session?</DialogTitle>\n        <DialogContent>\n          <TextField\n            fullWidth\n            multiline\n            rows={4}\n            label=\"Quick session notes (optional)\"\n            value={sessionNotes}\n            onChange={(e) => setSessionNotes(e.target.value)}\n            placeholder=\"Any important observations from this session...\"\n            sx={{ mb: 2 }}\n          />\n          <Box sx={{ display: 'flex', gap: 2 }}>\n            <Button \n              variant=\"contained\" \n              color=\"error\" \n              onClick={confirmEndCall}\n              fullWidth\n            >\n              End Session\n            </Button>\n            <Button \n              variant=\"outlined\" \n              onClick={() => setShowEndDialog(false)}\n              fullWidth\n            >\n              Continue\n            </Button>\n          </Box>\n        </DialogContent>\n      </Dialog>\n    </Box>\n  );\n}\n\n// What we're NOT implementing:\n// - Recording (legal/privacy complexity)\n// - Virtual backgrounds (not essential)\n// - Breakout rooms (not needed for 1:1)\n// - Chat during video (distraction)\n// - Reactions/emojis (not professional)\n// - Whiteboard (scope creep)\n// Just simple, secure video therapy"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}