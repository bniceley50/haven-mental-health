{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import{Box,Paper,Typography,Button,IconButton,Alert,Dialog,DialogTitle,DialogContent,TextField}from'@mui/material';import{Videocam,VideocamOff,Mic,MicOff,CallEnd,ScreenShare,StopScreenShare,Lock,Warning}from'@mui/icons-material';import{useP2P}from'../p2p/p2p-hook';import{useParams,useLocation,useNavigate}from'react-router-dom';/**\n * Video Session Component - Simple, secure video therapy\n * WebRTC peer-to-peer, no recording, no fancy features\n * Just reliable video calls between therapist and patient\n */import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export function VideoSession(){const{sessionId}=useParams();const location=useLocation();const navigate=useNavigate();// Get patient data from navigation state\nconst{patientName='Patient'}=location.state||{};const localVideoRef=useRef(null);const remoteVideoRef=useRef(null);const[localStream,setLocalStream]=useState(null);const[remoteStream,setRemoteStream]=useState(null);const[isVideoOn,setIsVideoOn]=useState(true);const[isAudioOn,setIsAudioOn]=useState(true);const[isScreenSharing,setIsScreenSharing]=useState(false);const[connectionStatus,setConnectionStatus]=useState('connecting');const[sessionNotes,setSessionNotes]=useState('');const[showEndDialog,setShowEndDialog]=useState(false);const{startCall,endCall,toggleVideo,toggleAudio,onRemoteStream,connectionState}=useP2P(sessionId);useEffect(()=>{// Initialize video call\ninitializeCall();return()=>{// Cleanup on unmount\nif(localStream){localStream.getTracks().forEach(track=>track.stop());}};},[]);useEffect(()=>{// Handle remote stream\nconst unsubscribe=onRemoteStream(stream=>{setRemoteStream(stream);if(remoteVideoRef.current){remoteVideoRef.current.srcObject=stream;}});return unsubscribe;},[onRemoteStream]);const initializeCall=async()=>{try{// Get user media\nconst stream=await navigator.mediaDevices.getUserMedia({video:{width:{ideal:1280},height:{ideal:720}},audio:{echoCancellation:true,noiseSuppression:true,autoGainControl:true}});setLocalStream(stream);if(localVideoRef.current){localVideoRef.current.srcObject=stream;}// Start the call\nawait startCall(stream);setConnectionStatus('connected');}catch(error){console.error('Failed to initialize call:',error);setConnectionStatus('failed');}};const handleToggleVideo=()=>{if(localStream){const videoTrack=localStream.getVideoTracks()[0];if(videoTrack){videoTrack.enabled=!videoTrack.enabled;setIsVideoOn(videoTrack.enabled);toggleVideo();}}};const handleToggleAudio=()=>{if(localStream){const audioTrack=localStream.getAudioTracks()[0];if(audioTrack){audioTrack.enabled=!audioTrack.enabled;setIsAudioOn(audioTrack.enabled);toggleAudio();}}};const handleScreenShare=async()=>{if(!isScreenSharing){try{const screenStream=await navigator.mediaDevices.getDisplayMedia({video:true,audio:false});// Replace video track with screen share\nconst screenTrack=screenStream.getVideoTracks()[0];// In real implementation, would get peer connection from P2P service\n// For now, just log the action\nconsole.log('Would share screen with track:',screenTrack);screenTrack.onended=()=>{handleStopScreenShare();};setIsScreenSharing(true);}catch(error){console.error('Failed to share screen:',error);}}else{handleStopScreenShare();}};const handleStopScreenShare=()=>{// Return to camera\nconst videoTrack=localStream.getVideoTracks()[0];// In real implementation, would get peer connection from P2P service\nconsole.log('Would stop screen share and return to video:',videoTrack);setIsScreenSharing(false);};const handleEndCall=()=>{setShowEndDialog(true);};const confirmEndCall=()=>{// Stop all tracks\nif(localStream){localStream.getTracks().forEach(track=>track.stop());}// End the call\nendCall();// Save session notes if any\nif(sessionNotes){// In real app, this would save to secure backend\nlocalStorage.setItem(\"session-\".concat(sessionId,\"-notes\"),sessionNotes);}// Navigate back to dashboard\nnavigate('/');};return/*#__PURE__*/_jsxs(Box,{sx:{height:'100vh',bgcolor:'grey.900',position:'relative'},children:[connectionStatus!=='connected'&&/*#__PURE__*/_jsx(Alert,{severity:\"warning\",sx:{position:'absolute',top:0,left:0,right:0},children:connectionStatus==='connecting'?'Connecting to secure session...':'Connection failed'}),/*#__PURE__*/_jsxs(Box,{sx:{height:'100%',display:'flex',p:2,gap:2},children:[/*#__PURE__*/_jsxs(Box,{sx:{flex:1,position:'relative'},children:[/*#__PURE__*/_jsx(\"video\",{ref:remoteVideoRef,autoPlay:true,playsInline:true,style:{width:'100%',height:'100%',objectFit:'cover',borderRadius:8,backgroundColor:'#000'}}),/*#__PURE__*/_jsxs(Box,{sx:{position:'absolute',top:16,left:16,display:'flex',alignItems:'center',gap:1,bgcolor:'rgba(0,0,0,0.6)',p:1,borderRadius:2},children:[/*#__PURE__*/_jsx(Typography,{color:\"white\",children:patientName}),/*#__PURE__*/_jsx(Lock,{fontSize:\"small\",sx:{color:'success.light'}})]})]}),/*#__PURE__*/_jsx(Box,{sx:{position:'absolute',bottom:100,right:20,width:240,height:180},children:/*#__PURE__*/_jsx(\"video\",{ref:localVideoRef,autoPlay:true,muted:true,playsInline:true,style:{width:'100%',height:'100%',objectFit:'cover',borderRadius:8,backgroundColor:'#000',border:'2px solid #fff'}})})]}),/*#__PURE__*/_jsxs(Paper,{sx:{position:'absolute',bottom:0,left:0,right:0,p:2,display:'flex',justifyContent:'center',gap:2,borderRadius:0},children:[/*#__PURE__*/_jsx(IconButton,{onClick:handleToggleVideo,color:isVideoOn?'default':'error',sx:{bgcolor:'action.hover'},children:isVideoOn?/*#__PURE__*/_jsx(Videocam,{}):/*#__PURE__*/_jsx(VideocamOff,{})}),/*#__PURE__*/_jsx(IconButton,{onClick:handleToggleAudio,color:isAudioOn?'default':'error',sx:{bgcolor:'action.hover'},children:isAudioOn?/*#__PURE__*/_jsx(Mic,{}):/*#__PURE__*/_jsx(MicOff,{})}),/*#__PURE__*/_jsx(IconButton,{onClick:handleScreenShare,color:isScreenSharing?'primary':'default',sx:{bgcolor:'action.hover'},children:isScreenSharing?/*#__PURE__*/_jsx(StopScreenShare,{}):/*#__PURE__*/_jsx(ScreenShare,{})}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"error\",onClick:handleEndCall,startIcon:/*#__PURE__*/_jsx(CallEnd,{}),children:\"End Session\"})]}),/*#__PURE__*/_jsxs(Dialog,{open:showEndDialog,onClose:()=>setShowEndDialog(false),children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"End Video Session?\"}),/*#__PURE__*/_jsxs(DialogContent,{children:[/*#__PURE__*/_jsx(TextField,{fullWidth:true,multiline:true,rows:4,label:\"Quick session notes (optional)\",value:sessionNotes,onChange:e=>setSessionNotes(e.target.value),placeholder:\"Any important observations from this session...\",sx:{mb:2}}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',gap:2},children:[/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"error\",onClick:confirmEndCall,fullWidth:true,children:\"End Session\"}),/*#__PURE__*/_jsx(Button,{variant:\"outlined\",onClick:()=>setShowEndDialog(false),fullWidth:true,children:\"Continue\"})]})]})]})]});}// What we're NOT implementing:\n// - Recording (legal/privacy complexity)\n// - Virtual backgrounds (not essential)\n// - Breakout rooms (not needed for 1:1)\n// - Chat during video (distraction)\n// - Reactions/emojis (not professional)\n// - Whiteboard (scope creep)\n// Just simple, secure video therapy","map":{"version":3,"names":["React","useState","useEffect","useRef","Box","Paper","Typography","Button","IconButton","Alert","Dialog","DialogTitle","DialogContent","TextField","Videocam","VideocamOff","Mic","MicOff","CallEnd","ScreenShare","StopScreenShare","Lock","Warning","useP2P","useParams","useLocation","useNavigate","jsx","_jsx","jsxs","_jsxs","VideoSession","sessionId","location","navigate","patientName","state","localVideoRef","remoteVideoRef","localStream","setLocalStream","remoteStream","setRemoteStream","isVideoOn","setIsVideoOn","isAudioOn","setIsAudioOn","isScreenSharing","setIsScreenSharing","connectionStatus","setConnectionStatus","sessionNotes","setSessionNotes","showEndDialog","setShowEndDialog","startCall","endCall","toggleVideo","toggleAudio","onRemoteStream","connectionState","initializeCall","getTracks","forEach","track","stop","unsubscribe","stream","current","srcObject","navigator","mediaDevices","getUserMedia","video","width","ideal","height","audio","echoCancellation","noiseSuppression","autoGainControl","error","console","handleToggleVideo","videoTrack","getVideoTracks","enabled","handleToggleAudio","audioTrack","getAudioTracks","handleScreenShare","screenStream","getDisplayMedia","screenTrack","log","onended","handleStopScreenShare","handleEndCall","confirmEndCall","localStorage","setItem","concat","sx","bgcolor","position","children","severity","top","left","right","display","p","gap","flex","ref","autoPlay","playsInline","style","objectFit","borderRadius","backgroundColor","alignItems","color","fontSize","bottom","muted","border","justifyContent","onClick","variant","startIcon","open","onClose","fullWidth","multiline","rows","label","value","onChange","e","target","placeholder","mb"],"sources":["C:/Users/brian/OneDrive/Desktop/shadow-sidekick-sqlite-vss-poc/haven-mental-health/src/video/video-session.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport {\n  Box,\n  Paper,\n  Typography,\n  Button,\n  IconButton,\n  Alert,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  TextField\n} from '@mui/material';\nimport {\n  Videocam,\n  VideocamOff,\n  Mic,\n  MicOff,\n  CallEnd,\n  ScreenShare,\n  StopScreenShare,\n  Lock,\n  Warning\n} from '@mui/icons-material';\nimport { useP2P } from '../p2p/p2p-hook';\nimport { useParams, useLocation, useNavigate } from 'react-router-dom';\n\n/**\n * Video Session Component - Simple, secure video therapy\n * WebRTC peer-to-peer, no recording, no fancy features\n * Just reliable video calls between therapist and patient\n */\nexport function VideoSession() {\n  const { sessionId } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  \n  // Get patient data from navigation state\n  const { patientName = 'Patient' } = location.state || {};\n  \n  const localVideoRef = useRef(null);\n  const remoteVideoRef = useRef(null);\n  const [localStream, setLocalStream] = useState(null);\n  const [remoteStream, setRemoteStream] = useState(null);\n  \n  const [isVideoOn, setIsVideoOn] = useState(true);\n  const [isAudioOn, setIsAudioOn] = useState(true);\n  const [isScreenSharing, setIsScreenSharing] = useState(false);\n  const [connectionStatus, setConnectionStatus] = useState('connecting');\n  const [sessionNotes, setSessionNotes] = useState('');\n  const [showEndDialog, setShowEndDialog] = useState(false);\n  \n  const { \n    startCall, \n    endCall, \n    toggleVideo, \n    toggleAudio, \n    onRemoteStream,\n    connectionState \n  } = useP2P(sessionId);\n\n  useEffect(() => {\n    // Initialize video call\n    initializeCall();\n    \n    return () => {\n      // Cleanup on unmount\n      if (localStream) {\n        localStream.getTracks().forEach(track => track.stop());\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    // Handle remote stream\n    const unsubscribe = onRemoteStream((stream) => {\n      setRemoteStream(stream);\n      if (remoteVideoRef.current) {\n        remoteVideoRef.current.srcObject = stream;\n      }\n    });\n\n    return unsubscribe;\n  }, [onRemoteStream]);\n\n  const initializeCall = async () => {\n    try {\n      // Get user media\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: {\n          width: { ideal: 1280 },\n          height: { ideal: 720 }\n        },\n        audio: {\n          echoCancellation: true,\n          noiseSuppression: true,\n          autoGainControl: true\n        }\n      });\n\n      setLocalStream(stream);\n      if (localVideoRef.current) {\n        localVideoRef.current.srcObject = stream;\n      }\n\n      // Start the call\n      await startCall(stream);\n      setConnectionStatus('connected');\n    } catch (error) {\n      console.error('Failed to initialize call:', error);\n      setConnectionStatus('failed');\n    }\n  };\n\n  const handleToggleVideo = () => {\n    if (localStream) {\n      const videoTrack = localStream.getVideoTracks()[0];\n      if (videoTrack) {\n        videoTrack.enabled = !videoTrack.enabled;\n        setIsVideoOn(videoTrack.enabled);\n        toggleVideo();\n      }\n    }\n  };\n\n  const handleToggleAudio = () => {\n    if (localStream) {\n      const audioTrack = localStream.getAudioTracks()[0];\n      if (audioTrack) {\n        audioTrack.enabled = !audioTrack.enabled;\n        setIsAudioOn(audioTrack.enabled);\n        toggleAudio();\n      }\n    }\n  };\n\n  const handleScreenShare = async () => {\n    if (!isScreenSharing) {\n      try {\n        const screenStream = await navigator.mediaDevices.getDisplayMedia({\n          video: true,\n          audio: false\n        });\n\n        // Replace video track with screen share\n        const screenTrack = screenStream.getVideoTracks()[0];\n        // In real implementation, would get peer connection from P2P service\n        // For now, just log the action\n        console.log('Would share screen with track:', screenTrack);\n        screenTrack.onended = () => {\n          handleStopScreenShare();\n        };\n\n        setIsScreenSharing(true);\n      } catch (error) {\n        console.error('Failed to share screen:', error);\n      }\n    } else {\n      handleStopScreenShare();\n    }\n  };\n\n  const handleStopScreenShare = () => {\n    // Return to camera\n    const videoTrack = localStream.getVideoTracks()[0];\n    // In real implementation, would get peer connection from P2P service\n    console.log('Would stop screen share and return to video:', videoTrack);\n    \n    setIsScreenSharing(false);\n  };\n\n  const handleEndCall = () => {\n    setShowEndDialog(true);\n  };\n\n  const confirmEndCall = () => {\n    // Stop all tracks\n    if (localStream) {\n      localStream.getTracks().forEach(track => track.stop());\n    }\n    \n    // End the call\n    endCall();\n    \n    // Save session notes if any\n    if (sessionNotes) {\n      // In real app, this would save to secure backend\n      localStorage.setItem(`session-${sessionId}-notes`, sessionNotes);\n    }\n    \n    // Navigate back to dashboard\n    navigate('/');\n  };\n\n  return (\n    <Box sx={{ height: '100vh', bgcolor: 'grey.900', position: 'relative' }}>\n      {/* Connection Status */}\n      {connectionStatus !== 'connected' && (\n        <Alert severity=\"warning\" sx={{ position: 'absolute', top: 0, left: 0, right: 0 }}>\n          {connectionStatus === 'connecting' ? 'Connecting to secure session...' : 'Connection failed'}\n        </Alert>\n      )}\n\n      {/* Main Video Area */}\n      <Box sx={{ height: '100%', display: 'flex', p: 2, gap: 2 }}>\n        {/* Remote Video (Main) */}\n        <Box sx={{ flex: 1, position: 'relative' }}>\n          <video\n            ref={remoteVideoRef}\n            autoPlay\n            playsInline\n            style={{\n              width: '100%',\n              height: '100%',\n              objectFit: 'cover',\n              borderRadius: 8,\n              backgroundColor: '#000'\n            }}\n          />\n          <Box sx={{ \n            position: 'absolute', \n            top: 16, \n            left: 16,\n            display: 'flex',\n            alignItems: 'center',\n            gap: 1,\n            bgcolor: 'rgba(0,0,0,0.6)',\n            p: 1,\n            borderRadius: 2\n          }}>\n            <Typography color=\"white\">{patientName}</Typography>\n            <Lock fontSize=\"small\" sx={{ color: 'success.light' }} />\n          </Box>\n        </Box>\n\n        {/* Local Video (PiP) */}\n        <Box sx={{ \n          position: 'absolute', \n          bottom: 100, \n          right: 20,\n          width: 240,\n          height: 180\n        }}>\n          <video\n            ref={localVideoRef}\n            autoPlay\n            muted\n            playsInline\n            style={{\n              width: '100%',\n              height: '100%',\n              objectFit: 'cover',\n              borderRadius: 8,\n              backgroundColor: '#000',\n              border: '2px solid #fff'\n            }}\n          />\n        </Box>\n      </Box>\n\n      {/* Controls */}\n      <Paper sx={{ \n        position: 'absolute', \n        bottom: 0, \n        left: 0, \n        right: 0,\n        p: 2,\n        display: 'flex',\n        justifyContent: 'center',\n        gap: 2,\n        borderRadius: 0\n      }}>\n        <IconButton\n          onClick={handleToggleVideo}\n          color={isVideoOn ? 'default' : 'error'}\n          sx={{ bgcolor: 'action.hover' }}\n        >\n          {isVideoOn ? <Videocam /> : <VideocamOff />}\n        </IconButton>\n\n        <IconButton\n          onClick={handleToggleAudio}\n          color={isAudioOn ? 'default' : 'error'}\n          sx={{ bgcolor: 'action.hover' }}\n        >\n          {isAudioOn ? <Mic /> : <MicOff />}\n        </IconButton>\n\n        <IconButton\n          onClick={handleScreenShare}\n          color={isScreenSharing ? 'primary' : 'default'}\n          sx={{ bgcolor: 'action.hover' }}\n        >\n          {isScreenSharing ? <StopScreenShare /> : <ScreenShare />}\n        </IconButton>\n\n        <Button\n          variant=\"contained\"\n          color=\"error\"\n          onClick={handleEndCall}\n          startIcon={<CallEnd />}\n        >\n          End Session\n        </Button>\n      </Paper>\n\n      {/* End Call Dialog */}\n      <Dialog open={showEndDialog} onClose={() => setShowEndDialog(false)}>\n        <DialogTitle>End Video Session?</DialogTitle>\n        <DialogContent>\n          <TextField\n            fullWidth\n            multiline\n            rows={4}\n            label=\"Quick session notes (optional)\"\n            value={sessionNotes}\n            onChange={(e) => setSessionNotes(e.target.value)}\n            placeholder=\"Any important observations from this session...\"\n            sx={{ mb: 2 }}\n          />\n          <Box sx={{ display: 'flex', gap: 2 }}>\n            <Button \n              variant=\"contained\" \n              color=\"error\" \n              onClick={confirmEndCall}\n              fullWidth\n            >\n              End Session\n            </Button>\n            <Button \n              variant=\"outlined\" \n              onClick={() => setShowEndDialog(false)}\n              fullWidth\n            >\n              Continue\n            </Button>\n          </Box>\n        </DialogContent>\n      </Dialog>\n    </Box>\n  );\n}\n\n// What we're NOT implementing:\n// - Recording (legal/privacy complexity)\n// - Virtual backgrounds (not essential)\n// - Breakout rooms (not needed for 1:1)\n// - Chat during video (distraction)\n// - Reactions/emojis (not professional)\n// - Whiteboard (scope creep)\n// Just simple, secure video therapy"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}