{"ast":null,"code":"import _objectSpread from\"C:/Users/brian/OneDrive/Desktop/shadow-sidekick-sqlite-vss-poc/haven-mental-health/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{Box,Paper,TextField,Button,Typography,Select,MenuItem,FormControl,InputLabel,Alert,IconButton}from'@mui/material';import{Save,Lock,ArrowBack}from'@mui/icons-material';import{useEncryption}from'../encryption/encryption-hook';import{useLocation,useNavigate}from'react-router-dom';/**\n * Session Note Component - Simple, focused on therapy needs\n * SOAP, DAP, or free-form notes\n * No complex forms, no insurance codes, no billing integration\n */import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";export function SessionNote(){const location=useLocation();const navigate=useNavigate();const[noteType,setNoteType]=useState('SOAP');// Get patient data from navigation state\nconst navigationState=location.state||{};const patientId=navigationState.patientId;const patientName=navigationState.patientName||'New Patient';const sessionDate=navigationState.sessionDate||new Date();const[noteData,setNoteData]=useState({// SOAP format\nsubjective:'',objective:'',assessment:'',plan:'',// DAP format\ndata:'',assessmentDap:'',planDap:'',// Free form\nfreeText:'',// Common fields\nduration:50,// Standard 50-minute session\nsessionType:'individual'});const[saved,setSaved]=useState(false);const{encrypt}=useEncryption();const handleSave=async()=>{// Prepare note for encryption\nconst note={patientId,patientName,date:sessionDate||new Date(),type:noteType,duration:noteData.duration,sessionType:noteData.sessionType,content:noteType==='SOAP'?{subjective:noteData.subjective,objective:noteData.objective,assessment:noteData.assessment,plan:noteData.plan}:noteType==='DAP'?{data:noteData.data,assessment:noteData.assessmentDap,plan:noteData.planDap}:{note:noteData.freeText},createdAt:new Date(),signed:true,therapistId:'current-user-id'// Would come from auth\n};// Encrypt the entire note\nconst encryptedNote=await encrypt(note);// Save to local storage (real app would save to secure backend)\nconst notes=JSON.parse(localStorage.getItem('therapy-notes')||'[]');notes.push(encryptedNote);localStorage.setItem('therapy-notes',JSON.stringify(notes));setSaved(true);setTimeout(()=>{setSaved(false);// Navigate back to dashboard after save\nnavigate('/');},2000);};const handleBack=()=>{navigate(-1);};const renderSOAPFields=()=>/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Subjective\",placeholder:\"Client's reported symptoms, feelings, and concerns...\",multiline:true,rows:3,value:noteData.subjective,onChange:e=>setNoteData(_objectSpread(_objectSpread({},noteData),{},{subjective:e.target.value})),sx:{mb:2}}),/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Objective\",placeholder:\"Observable behaviors, affect, appearance...\",multiline:true,rows:3,value:noteData.objective,onChange:e=>setNoteData(_objectSpread(_objectSpread({},noteData),{},{objective:e.target.value})),sx:{mb:2}}),/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Assessment\",placeholder:\"Clinical impressions, progress, diagnosis considerations...\",multiline:true,rows:3,value:noteData.assessment,onChange:e=>setNoteData(_objectSpread(_objectSpread({},noteData),{},{assessment:e.target.value})),sx:{mb:2}}),/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Plan\",placeholder:\"Treatment plan, homework, next session focus...\",multiline:true,rows:3,value:noteData.plan,onChange:e=>setNoteData(_objectSpread(_objectSpread({},noteData),{},{plan:e.target.value})),sx:{mb:2}})]});const renderDAPFields=()=>/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Data\",placeholder:\"What happened in session - facts and observations...\",multiline:true,rows:4,value:noteData.data,onChange:e=>setNoteData(_objectSpread(_objectSpread({},noteData),{},{data:e.target.value})),sx:{mb:2}}),/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Assessment\",placeholder:\"Clinical interpretation of the data...\",multiline:true,rows:3,value:noteData.assessmentDap,onChange:e=>setNoteData(_objectSpread(_objectSpread({},noteData),{},{assessmentDap:e.target.value})),sx:{mb:2}}),/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Plan\",placeholder:\"Next steps and treatment planning...\",multiline:true,rows:3,value:noteData.planDap,onChange:e=>setNoteData(_objectSpread(_objectSpread({},noteData),{},{planDap:e.target.value})),sx:{mb:2}})]});const renderFreeForm=()=>/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Session Notes\",placeholder:\"Document the session in your preferred format...\",multiline:true,rows:12,value:noteData.freeText,onChange:e=>setNoteData(_objectSpread(_objectSpread({},noteData),{},{freeText:e.target.value})),sx:{mb:2}});return/*#__PURE__*/_jsxs(Paper,{sx:{p:3},children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',mb:3},children:[/*#__PURE__*/_jsx(IconButton,{onClick:handleBack,sx:{mr:2},children:/*#__PURE__*/_jsx(ArrowBack,{})}),/*#__PURE__*/_jsx(Box,{sx:{flex:1},children:/*#__PURE__*/_jsxs(Typography,{variant:\"h5\",children:[\"Session Note: \",patientName]})}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',gap:1},children:[/*#__PURE__*/_jsx(Lock,{fontSize:\"small\",color:\"success\"}),/*#__PURE__*/_jsx(Typography,{variant:\"caption\",color:\"success.main\",children:\"Encrypted & HIPAA Compliant\"})]})]}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',gap:2,mb:3},children:[/*#__PURE__*/_jsxs(FormControl,{sx:{minWidth:120},children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Note Type\"}),/*#__PURE__*/_jsxs(Select,{value:noteType,onChange:e=>setNoteType(e.target.value),label:\"Note Type\",children:[/*#__PURE__*/_jsx(MenuItem,{value:\"SOAP\",children:\"SOAP\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"DAP\",children:\"DAP\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"FREE\",children:\"Free Form\"})]})]}),/*#__PURE__*/_jsx(TextField,{label:\"Duration (minutes)\",type:\"number\",value:noteData.duration,onChange:e=>setNoteData(_objectSpread(_objectSpread({},noteData),{},{duration:e.target.value})),sx:{width:150}}),/*#__PURE__*/_jsxs(FormControl,{sx:{minWidth:150},children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Session Type\"}),/*#__PURE__*/_jsxs(Select,{value:noteData.sessionType,onChange:e=>setNoteData(_objectSpread(_objectSpread({},noteData),{},{sessionType:e.target.value})),label:\"Session Type\",children:[/*#__PURE__*/_jsx(MenuItem,{value:\"individual\",children:\"Individual\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"intake\",children:\"Intake\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"crisis\",children:\"Crisis\"})]})]})]}),noteType==='SOAP'&&renderSOAPFields(),noteType==='DAP'&&renderDAPFields(),noteType==='FREE'&&renderFreeForm(),/*#__PURE__*/_jsx(Box,{sx:{mt:3,display:'flex',justifyContent:'space-between'},children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",startIcon:/*#__PURE__*/_jsx(Save,{}),onClick:handleSave,size:\"large\",children:\"Save & Sign Note\"})}),saved&&/*#__PURE__*/_jsx(Alert,{severity:\"success\",sx:{mt:2},children:\"Session note saved and encrypted successfully.\"})]});}// What we're NOT adding:\n// - CPT codes (billing complexity)\n// - Insurance requirements (not our problem)\n// - Treatment plan builders (too complex)\n// - Outcome measures (later feature)\n// - Diagnosis codes (liability issues)\n// - Medication tracking (scope creep)\n// Just simple, secure session notes.","map":{"version":3,"names":["React","useState","useEffect","Box","Paper","TextField","Button","Typography","Select","MenuItem","FormControl","InputLabel","Alert","IconButton","Save","Lock","ArrowBack","useEncryption","useLocation","useNavigate","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","SessionNote","location","navigate","noteType","setNoteType","navigationState","state","patientId","patientName","sessionDate","Date","noteData","setNoteData","subjective","objective","assessment","plan","data","assessmentDap","planDap","freeText","duration","sessionType","saved","setSaved","encrypt","handleSave","note","date","type","content","createdAt","signed","therapistId","encryptedNote","notes","JSON","parse","localStorage","getItem","push","setItem","stringify","setTimeout","handleBack","renderSOAPFields","children","fullWidth","label","placeholder","multiline","rows","value","onChange","e","_objectSpread","target","sx","mb","renderDAPFields","renderFreeForm","p","display","alignItems","onClick","mr","flex","variant","gap","fontSize","color","minWidth","width","mt","justifyContent","startIcon","size","severity"],"sources":["C:/Users/brian/OneDrive/Desktop/shadow-sidekick-sqlite-vss-poc/haven-mental-health/src/notes/session-note.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Paper,\n  TextField,\n  Button,\n  Typography,\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  Alert,\n  IconButton\n} from '@mui/material';\nimport { Save, Lock, ArrowBack } from '@mui/icons-material';\nimport { useEncryption } from '../encryption/encryption-hook';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\n/**\n * Session Note Component - Simple, focused on therapy needs\n * SOAP, DAP, or free-form notes\n * No complex forms, no insurance codes, no billing integration\n */\nexport function SessionNote() {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [noteType, setNoteType] = useState('SOAP');\n  \n  // Get patient data from navigation state\n  const navigationState = location.state || {};\n  const patientId = navigationState.patientId;\n  const patientName = navigationState.patientName || 'New Patient';\n  const sessionDate = navigationState.sessionDate || new Date();\n  const [noteData, setNoteData] = useState({\n    // SOAP format\n    subjective: '',\n    objective: '',\n    assessment: '',\n    plan: '',\n    // DAP format\n    data: '',\n    assessmentDap: '',\n    planDap: '',\n    // Free form\n    freeText: '',\n    // Common fields\n    duration: 50, // Standard 50-minute session\n    sessionType: 'individual'\n  });\n  const [saved, setSaved] = useState(false);\n  const { encrypt } = useEncryption();\n\n  const handleSave = async () => {\n    // Prepare note for encryption\n    const note = {\n      patientId,\n      patientName,\n      date: sessionDate || new Date(),\n      type: noteType,\n      duration: noteData.duration,\n      sessionType: noteData.sessionType,\n      content: noteType === 'SOAP' ? {\n        subjective: noteData.subjective,\n        objective: noteData.objective,\n        assessment: noteData.assessment,\n        plan: noteData.plan\n      } : noteType === 'DAP' ? {\n        data: noteData.data,\n        assessment: noteData.assessmentDap,\n        plan: noteData.planDap\n      } : {\n        note: noteData.freeText\n      },\n      createdAt: new Date(),\n      signed: true,\n      therapistId: 'current-user-id' // Would come from auth\n    };\n\n    // Encrypt the entire note\n    const encryptedNote = await encrypt(note);\n    \n    // Save to local storage (real app would save to secure backend)\n    const notes = JSON.parse(localStorage.getItem('therapy-notes') || '[]');\n    notes.push(encryptedNote);\n    localStorage.setItem('therapy-notes', JSON.stringify(notes));\n    \n    setSaved(true);\n    setTimeout(() => {\n      setSaved(false);\n      // Navigate back to dashboard after save\n      navigate('/');\n    }, 2000);\n  };\n\n  const handleBack = () => {\n    navigate(-1);\n  };\n\n  const renderSOAPFields = () => (\n    <>\n      <TextField\n        fullWidth\n        label=\"Subjective\"\n        placeholder=\"Client's reported symptoms, feelings, and concerns...\"\n        multiline\n        rows={3}\n        value={noteData.subjective}\n        onChange={(e) => setNoteData({...noteData, subjective: e.target.value})}\n        sx={{ mb: 2 }}\n      />\n      <TextField\n        fullWidth\n        label=\"Objective\"\n        placeholder=\"Observable behaviors, affect, appearance...\"\n        multiline\n        rows={3}\n        value={noteData.objective}\n        onChange={(e) => setNoteData({...noteData, objective: e.target.value})}\n        sx={{ mb: 2 }}\n      />\n      <TextField\n        fullWidth\n        label=\"Assessment\"\n        placeholder=\"Clinical impressions, progress, diagnosis considerations...\"\n        multiline\n        rows={3}\n        value={noteData.assessment}\n        onChange={(e) => setNoteData({...noteData, assessment: e.target.value})}\n        sx={{ mb: 2 }}\n      />\n      <TextField\n        fullWidth\n        label=\"Plan\"\n        placeholder=\"Treatment plan, homework, next session focus...\"\n        multiline\n        rows={3}\n        value={noteData.plan}\n        onChange={(e) => setNoteData({...noteData, plan: e.target.value})}\n        sx={{ mb: 2 }}\n      />\n    </>\n  );\n\n  const renderDAPFields = () => (\n    <>\n      <TextField\n        fullWidth\n        label=\"Data\"\n        placeholder=\"What happened in session - facts and observations...\"\n        multiline\n        rows={4}\n        value={noteData.data}\n        onChange={(e) => setNoteData({...noteData, data: e.target.value})}\n        sx={{ mb: 2 }}\n      />\n      <TextField\n        fullWidth\n        label=\"Assessment\"\n        placeholder=\"Clinical interpretation of the data...\"\n        multiline\n        rows={3}\n        value={noteData.assessmentDap}\n        onChange={(e) => setNoteData({...noteData, assessmentDap: e.target.value})}\n        sx={{ mb: 2 }}\n      />\n      <TextField\n        fullWidth\n        label=\"Plan\"\n        placeholder=\"Next steps and treatment planning...\"\n        multiline\n        rows={3}\n        value={noteData.planDap}\n        onChange={(e) => setNoteData({...noteData, planDap: e.target.value})}\n        sx={{ mb: 2 }}\n      />\n    </>\n  );\n\n  const renderFreeForm = () => (\n    <TextField\n      fullWidth\n      label=\"Session Notes\"\n      placeholder=\"Document the session in your preferred format...\"\n      multiline\n      rows={12}\n      value={noteData.freeText}\n      onChange={(e) => setNoteData({...noteData, freeText: e.target.value})}\n      sx={{ mb: 2 }}\n    />\n  );\n\n  return (\n    <Paper sx={{ p: 3 }}>\n      <Box sx={{ display: 'flex', alignItems: 'center', mb: 3 }}>\n        <IconButton onClick={handleBack} sx={{ mr: 2 }}>\n          <ArrowBack />\n        </IconButton>\n        <Box sx={{ flex: 1 }}>\n          <Typography variant=\"h5\">\n            Session Note: {patientName}\n          </Typography>\n        </Box>\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n          <Lock fontSize=\"small\" color=\"success\" />\n          <Typography variant=\"caption\" color=\"success.main\">\n            Encrypted & HIPAA Compliant\n          </Typography>\n        </Box>\n      </Box>\n\n      <Box sx={{ display: 'flex', gap: 2, mb: 3 }}>\n        <FormControl sx={{ minWidth: 120 }}>\n          <InputLabel>Note Type</InputLabel>\n          <Select\n            value={noteType}\n            onChange={(e) => setNoteType(e.target.value)}\n            label=\"Note Type\"\n          >\n            <MenuItem value=\"SOAP\">SOAP</MenuItem>\n            <MenuItem value=\"DAP\">DAP</MenuItem>\n            <MenuItem value=\"FREE\">Free Form</MenuItem>\n          </Select>\n        </FormControl>\n\n        <TextField\n          label=\"Duration (minutes)\"\n          type=\"number\"\n          value={noteData.duration}\n          onChange={(e) => setNoteData({...noteData, duration: e.target.value})}\n          sx={{ width: 150 }}\n        />\n\n        <FormControl sx={{ minWidth: 150 }}>\n          <InputLabel>Session Type</InputLabel>\n          <Select\n            value={noteData.sessionType}\n            onChange={(e) => setNoteData({...noteData, sessionType: e.target.value})}\n            label=\"Session Type\"\n          >\n            <MenuItem value=\"individual\">Individual</MenuItem>\n            <MenuItem value=\"intake\">Intake</MenuItem>\n            <MenuItem value=\"crisis\">Crisis</MenuItem>\n          </Select>\n        </FormControl>\n      </Box>\n\n      {noteType === 'SOAP' && renderSOAPFields()}\n      {noteType === 'DAP' && renderDAPFields()}\n      {noteType === 'FREE' && renderFreeForm()}\n\n      <Box sx={{ mt: 3, display: 'flex', justifyContent: 'space-between' }}>\n        <Button\n          variant=\"contained\"\n          startIcon={<Save />}\n          onClick={handleSave}\n          size=\"large\"\n        >\n          Save & Sign Note\n        </Button>\n      </Box>\n\n      {saved && (\n        <Alert severity=\"success\" sx={{ mt: 2 }}>\n          Session note saved and encrypted successfully.\n        </Alert>\n      )}\n    </Paper>\n  );\n}\n\n// What we're NOT adding:\n// - CPT codes (billing complexity)\n// - Insurance requirements (not our problem)\n// - Treatment plan builders (too complex)\n// - Outcome measures (later feature)\n// - Diagnosis codes (liability issues)\n// - Medication tracking (scope creep)\n// Just simple, secure session notes."],"mappings":"uKAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OACEC,GAAG,CACHC,KAAK,CACLC,SAAS,CACTC,MAAM,CACNC,UAAU,CACVC,MAAM,CACNC,QAAQ,CACRC,WAAW,CACXC,UAAU,CACVC,KAAK,CACLC,UAAU,KACL,eAAe,CACtB,OAASC,IAAI,CAAEC,IAAI,CAAEC,SAAS,KAAQ,qBAAqB,CAC3D,OAASC,aAAa,KAAQ,+BAA+B,CAC7D,OAASC,WAAW,CAAEC,WAAW,KAAQ,kBAAkB,CAE3D;AACA;AACA;AACA;AACA,GAJA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,CAAAC,IAAA,IAAAC,KAAA,yBAKA,MAAO,SAAS,CAAAC,WAAWA,CAAA,CAAG,CAC5B,KAAM,CAAAC,QAAQ,CAAGT,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAAU,QAAQ,CAAGT,WAAW,CAAC,CAAC,CAC9B,KAAM,CAACU,QAAQ,CAAEC,WAAW,CAAC,CAAG7B,QAAQ,CAAC,MAAM,CAAC,CAEhD;AACA,KAAM,CAAA8B,eAAe,CAAGJ,QAAQ,CAACK,KAAK,EAAI,CAAC,CAAC,CAC5C,KAAM,CAAAC,SAAS,CAAGF,eAAe,CAACE,SAAS,CAC3C,KAAM,CAAAC,WAAW,CAAGH,eAAe,CAACG,WAAW,EAAI,aAAa,CAChE,KAAM,CAAAC,WAAW,CAAGJ,eAAe,CAACI,WAAW,EAAI,GAAI,CAAAC,IAAI,CAAC,CAAC,CAC7D,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGrC,QAAQ,CAAC,CACvC;AACAsC,UAAU,CAAE,EAAE,CACdC,SAAS,CAAE,EAAE,CACbC,UAAU,CAAE,EAAE,CACdC,IAAI,CAAE,EAAE,CACR;AACAC,IAAI,CAAE,EAAE,CACRC,aAAa,CAAE,EAAE,CACjBC,OAAO,CAAE,EAAE,CACX;AACAC,QAAQ,CAAE,EAAE,CACZ;AACAC,QAAQ,CAAE,EAAE,CAAE;AACdC,WAAW,CAAE,YACf,CAAC,CAAC,CACF,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGjD,QAAQ,CAAC,KAAK,CAAC,CACzC,KAAM,CAAEkD,OAAQ,CAAC,CAAGlC,aAAa,CAAC,CAAC,CAEnC,KAAM,CAAAmC,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC7B;AACA,KAAM,CAAAC,IAAI,CAAG,CACXpB,SAAS,CACTC,WAAW,CACXoB,IAAI,CAAEnB,WAAW,EAAI,GAAI,CAAAC,IAAI,CAAC,CAAC,CAC/BmB,IAAI,CAAE1B,QAAQ,CACdkB,QAAQ,CAAEV,QAAQ,CAACU,QAAQ,CAC3BC,WAAW,CAAEX,QAAQ,CAACW,WAAW,CACjCQ,OAAO,CAAE3B,QAAQ,GAAK,MAAM,CAAG,CAC7BU,UAAU,CAAEF,QAAQ,CAACE,UAAU,CAC/BC,SAAS,CAAEH,QAAQ,CAACG,SAAS,CAC7BC,UAAU,CAAEJ,QAAQ,CAACI,UAAU,CAC/BC,IAAI,CAAEL,QAAQ,CAACK,IACjB,CAAC,CAAGb,QAAQ,GAAK,KAAK,CAAG,CACvBc,IAAI,CAAEN,QAAQ,CAACM,IAAI,CACnBF,UAAU,CAAEJ,QAAQ,CAACO,aAAa,CAClCF,IAAI,CAAEL,QAAQ,CAACQ,OACjB,CAAC,CAAG,CACFQ,IAAI,CAAEhB,QAAQ,CAACS,QACjB,CAAC,CACDW,SAAS,CAAE,GAAI,CAAArB,IAAI,CAAC,CAAC,CACrBsB,MAAM,CAAE,IAAI,CACZC,WAAW,CAAE,iBAAkB;AACjC,CAAC,CAED;AACA,KAAM,CAAAC,aAAa,CAAG,KAAM,CAAAT,OAAO,CAACE,IAAI,CAAC,CAEzC;AACA,KAAM,CAAAQ,KAAK,CAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC,EAAI,IAAI,CAAC,CACvEJ,KAAK,CAACK,IAAI,CAACN,aAAa,CAAC,CACzBI,YAAY,CAACG,OAAO,CAAC,eAAe,CAAEL,IAAI,CAACM,SAAS,CAACP,KAAK,CAAC,CAAC,CAE5DX,QAAQ,CAAC,IAAI,CAAC,CACdmB,UAAU,CAAC,IAAM,CACfnB,QAAQ,CAAC,KAAK,CAAC,CACf;AACAtB,QAAQ,CAAC,GAAG,CAAC,CACf,CAAC,CAAE,IAAI,CAAC,CACV,CAAC,CAED,KAAM,CAAA0C,UAAU,CAAGA,CAAA,GAAM,CACvB1C,QAAQ,CAAC,CAAC,CAAC,CAAC,CACd,CAAC,CAED,KAAM,CAAA2C,gBAAgB,CAAGA,CAAA,gBACvB9C,KAAA,CAAAF,SAAA,EAAAiD,QAAA,eACEnD,IAAA,CAAChB,SAAS,EACRoE,SAAS,MACTC,KAAK,CAAC,YAAY,CAClBC,WAAW,CAAC,uDAAuD,CACnEC,SAAS,MACTC,IAAI,CAAE,CAAE,CACRC,KAAK,CAAEzC,QAAQ,CAACE,UAAW,CAC3BwC,QAAQ,CAAGC,CAAC,EAAK1C,WAAW,CAAA2C,aAAA,CAAAA,aAAA,IAAK5C,QAAQ,MAAEE,UAAU,CAAEyC,CAAC,CAACE,MAAM,CAACJ,KAAK,EAAC,CAAE,CACxEK,EAAE,CAAE,CAAEC,EAAE,CAAE,CAAE,CAAE,CACf,CAAC,cACF/D,IAAA,CAAChB,SAAS,EACRoE,SAAS,MACTC,KAAK,CAAC,WAAW,CACjBC,WAAW,CAAC,6CAA6C,CACzDC,SAAS,MACTC,IAAI,CAAE,CAAE,CACRC,KAAK,CAAEzC,QAAQ,CAACG,SAAU,CAC1BuC,QAAQ,CAAGC,CAAC,EAAK1C,WAAW,CAAA2C,aAAA,CAAAA,aAAA,IAAK5C,QAAQ,MAAEG,SAAS,CAAEwC,CAAC,CAACE,MAAM,CAACJ,KAAK,EAAC,CAAE,CACvEK,EAAE,CAAE,CAAEC,EAAE,CAAE,CAAE,CAAE,CACf,CAAC,cACF/D,IAAA,CAAChB,SAAS,EACRoE,SAAS,MACTC,KAAK,CAAC,YAAY,CAClBC,WAAW,CAAC,6DAA6D,CACzEC,SAAS,MACTC,IAAI,CAAE,CAAE,CACRC,KAAK,CAAEzC,QAAQ,CAACI,UAAW,CAC3BsC,QAAQ,CAAGC,CAAC,EAAK1C,WAAW,CAAA2C,aAAA,CAAAA,aAAA,IAAK5C,QAAQ,MAAEI,UAAU,CAAEuC,CAAC,CAACE,MAAM,CAACJ,KAAK,EAAC,CAAE,CACxEK,EAAE,CAAE,CAAEC,EAAE,CAAE,CAAE,CAAE,CACf,CAAC,cACF/D,IAAA,CAAChB,SAAS,EACRoE,SAAS,MACTC,KAAK,CAAC,MAAM,CACZC,WAAW,CAAC,iDAAiD,CAC7DC,SAAS,MACTC,IAAI,CAAE,CAAE,CACRC,KAAK,CAAEzC,QAAQ,CAACK,IAAK,CACrBqC,QAAQ,CAAGC,CAAC,EAAK1C,WAAW,CAAA2C,aAAA,CAAAA,aAAA,IAAK5C,QAAQ,MAAEK,IAAI,CAAEsC,CAAC,CAACE,MAAM,CAACJ,KAAK,EAAC,CAAE,CAClEK,EAAE,CAAE,CAAEC,EAAE,CAAE,CAAE,CAAE,CACf,CAAC,EACF,CACH,CAED,KAAM,CAAAC,eAAe,CAAGA,CAAA,gBACtB5D,KAAA,CAAAF,SAAA,EAAAiD,QAAA,eACEnD,IAAA,CAAChB,SAAS,EACRoE,SAAS,MACTC,KAAK,CAAC,MAAM,CACZC,WAAW,CAAC,sDAAsD,CAClEC,SAAS,MACTC,IAAI,CAAE,CAAE,CACRC,KAAK,CAAEzC,QAAQ,CAACM,IAAK,CACrBoC,QAAQ,CAAGC,CAAC,EAAK1C,WAAW,CAAA2C,aAAA,CAAAA,aAAA,IAAK5C,QAAQ,MAAEM,IAAI,CAAEqC,CAAC,CAACE,MAAM,CAACJ,KAAK,EAAC,CAAE,CAClEK,EAAE,CAAE,CAAEC,EAAE,CAAE,CAAE,CAAE,CACf,CAAC,cACF/D,IAAA,CAAChB,SAAS,EACRoE,SAAS,MACTC,KAAK,CAAC,YAAY,CAClBC,WAAW,CAAC,wCAAwC,CACpDC,SAAS,MACTC,IAAI,CAAE,CAAE,CACRC,KAAK,CAAEzC,QAAQ,CAACO,aAAc,CAC9BmC,QAAQ,CAAGC,CAAC,EAAK1C,WAAW,CAAA2C,aAAA,CAAAA,aAAA,IAAK5C,QAAQ,MAAEO,aAAa,CAAEoC,CAAC,CAACE,MAAM,CAACJ,KAAK,EAAC,CAAE,CAC3EK,EAAE,CAAE,CAAEC,EAAE,CAAE,CAAE,CAAE,CACf,CAAC,cACF/D,IAAA,CAAChB,SAAS,EACRoE,SAAS,MACTC,KAAK,CAAC,MAAM,CACZC,WAAW,CAAC,sCAAsC,CAClDC,SAAS,MACTC,IAAI,CAAE,CAAE,CACRC,KAAK,CAAEzC,QAAQ,CAACQ,OAAQ,CACxBkC,QAAQ,CAAGC,CAAC,EAAK1C,WAAW,CAAA2C,aAAA,CAAAA,aAAA,IAAK5C,QAAQ,MAAEQ,OAAO,CAAEmC,CAAC,CAACE,MAAM,CAACJ,KAAK,EAAC,CAAE,CACrEK,EAAE,CAAE,CAAEC,EAAE,CAAE,CAAE,CAAE,CACf,CAAC,EACF,CACH,CAED,KAAM,CAAAE,cAAc,CAAGA,CAAA,gBACrBjE,IAAA,CAAChB,SAAS,EACRoE,SAAS,MACTC,KAAK,CAAC,eAAe,CACrBC,WAAW,CAAC,kDAAkD,CAC9DC,SAAS,MACTC,IAAI,CAAE,EAAG,CACTC,KAAK,CAAEzC,QAAQ,CAACS,QAAS,CACzBiC,QAAQ,CAAGC,CAAC,EAAK1C,WAAW,CAAA2C,aAAA,CAAAA,aAAA,IAAK5C,QAAQ,MAAES,QAAQ,CAAEkC,CAAC,CAACE,MAAM,CAACJ,KAAK,EAAC,CAAE,CACtEK,EAAE,CAAE,CAAEC,EAAE,CAAE,CAAE,CAAE,CACf,CACF,CAED,mBACE3D,KAAA,CAACrB,KAAK,EAAC+E,EAAE,CAAE,CAAEI,CAAC,CAAE,CAAE,CAAE,CAAAf,QAAA,eAClB/C,KAAA,CAACtB,GAAG,EAACgF,EAAE,CAAE,CAAEK,OAAO,CAAE,MAAM,CAAEC,UAAU,CAAE,QAAQ,CAAEL,EAAE,CAAE,CAAE,CAAE,CAAAZ,QAAA,eACxDnD,IAAA,CAACR,UAAU,EAAC6E,OAAO,CAAEpB,UAAW,CAACa,EAAE,CAAE,CAAEQ,EAAE,CAAE,CAAE,CAAE,CAAAnB,QAAA,cAC7CnD,IAAA,CAACL,SAAS,GAAE,CAAC,CACH,CAAC,cACbK,IAAA,CAAClB,GAAG,EAACgF,EAAE,CAAE,CAAES,IAAI,CAAE,CAAE,CAAE,CAAApB,QAAA,cACnB/C,KAAA,CAAClB,UAAU,EAACsF,OAAO,CAAC,IAAI,CAAArB,QAAA,EAAC,gBACT,CAACtC,WAAW,EAChB,CAAC,CACV,CAAC,cACNT,KAAA,CAACtB,GAAG,EAACgF,EAAE,CAAE,CAAEK,OAAO,CAAE,MAAM,CAAEC,UAAU,CAAE,QAAQ,CAAEK,GAAG,CAAE,CAAE,CAAE,CAAAtB,QAAA,eACzDnD,IAAA,CAACN,IAAI,EAACgF,QAAQ,CAAC,OAAO,CAACC,KAAK,CAAC,SAAS,CAAE,CAAC,cACzC3E,IAAA,CAACd,UAAU,EAACsF,OAAO,CAAC,SAAS,CAACG,KAAK,CAAC,cAAc,CAAAxB,QAAA,CAAC,6BAEnD,CAAY,CAAC,EACV,CAAC,EACH,CAAC,cAEN/C,KAAA,CAACtB,GAAG,EAACgF,EAAE,CAAE,CAAEK,OAAO,CAAE,MAAM,CAAEM,GAAG,CAAE,CAAC,CAAEV,EAAE,CAAE,CAAE,CAAE,CAAAZ,QAAA,eAC1C/C,KAAA,CAACf,WAAW,EAACyE,EAAE,CAAE,CAAEc,QAAQ,CAAE,GAAI,CAAE,CAAAzB,QAAA,eACjCnD,IAAA,CAACV,UAAU,EAAA6D,QAAA,CAAC,WAAS,CAAY,CAAC,cAClC/C,KAAA,CAACjB,MAAM,EACLsE,KAAK,CAAEjD,QAAS,CAChBkD,QAAQ,CAAGC,CAAC,EAAKlD,WAAW,CAACkD,CAAC,CAACE,MAAM,CAACJ,KAAK,CAAE,CAC7CJ,KAAK,CAAC,WAAW,CAAAF,QAAA,eAEjBnD,IAAA,CAACZ,QAAQ,EAACqE,KAAK,CAAC,MAAM,CAAAN,QAAA,CAAC,MAAI,CAAU,CAAC,cACtCnD,IAAA,CAACZ,QAAQ,EAACqE,KAAK,CAAC,KAAK,CAAAN,QAAA,CAAC,KAAG,CAAU,CAAC,cACpCnD,IAAA,CAACZ,QAAQ,EAACqE,KAAK,CAAC,MAAM,CAAAN,QAAA,CAAC,WAAS,CAAU,CAAC,EACrC,CAAC,EACE,CAAC,cAEdnD,IAAA,CAAChB,SAAS,EACRqE,KAAK,CAAC,oBAAoB,CAC1BnB,IAAI,CAAC,QAAQ,CACbuB,KAAK,CAAEzC,QAAQ,CAACU,QAAS,CACzBgC,QAAQ,CAAGC,CAAC,EAAK1C,WAAW,CAAA2C,aAAA,CAAAA,aAAA,IAAK5C,QAAQ,MAAEU,QAAQ,CAAEiC,CAAC,CAACE,MAAM,CAACJ,KAAK,EAAC,CAAE,CACtEK,EAAE,CAAE,CAAEe,KAAK,CAAE,GAAI,CAAE,CACpB,CAAC,cAEFzE,KAAA,CAACf,WAAW,EAACyE,EAAE,CAAE,CAAEc,QAAQ,CAAE,GAAI,CAAE,CAAAzB,QAAA,eACjCnD,IAAA,CAACV,UAAU,EAAA6D,QAAA,CAAC,cAAY,CAAY,CAAC,cACrC/C,KAAA,CAACjB,MAAM,EACLsE,KAAK,CAAEzC,QAAQ,CAACW,WAAY,CAC5B+B,QAAQ,CAAGC,CAAC,EAAK1C,WAAW,CAAA2C,aAAA,CAAAA,aAAA,IAAK5C,QAAQ,MAAEW,WAAW,CAAEgC,CAAC,CAACE,MAAM,CAACJ,KAAK,EAAC,CAAE,CACzEJ,KAAK,CAAC,cAAc,CAAAF,QAAA,eAEpBnD,IAAA,CAACZ,QAAQ,EAACqE,KAAK,CAAC,YAAY,CAAAN,QAAA,CAAC,YAAU,CAAU,CAAC,cAClDnD,IAAA,CAACZ,QAAQ,EAACqE,KAAK,CAAC,QAAQ,CAAAN,QAAA,CAAC,QAAM,CAAU,CAAC,cAC1CnD,IAAA,CAACZ,QAAQ,EAACqE,KAAK,CAAC,QAAQ,CAAAN,QAAA,CAAC,QAAM,CAAU,CAAC,EACpC,CAAC,EACE,CAAC,EACX,CAAC,CAEL3C,QAAQ,GAAK,MAAM,EAAI0C,gBAAgB,CAAC,CAAC,CACzC1C,QAAQ,GAAK,KAAK,EAAIwD,eAAe,CAAC,CAAC,CACvCxD,QAAQ,GAAK,MAAM,EAAIyD,cAAc,CAAC,CAAC,cAExCjE,IAAA,CAAClB,GAAG,EAACgF,EAAE,CAAE,CAAEgB,EAAE,CAAE,CAAC,CAAEX,OAAO,CAAE,MAAM,CAAEY,cAAc,CAAE,eAAgB,CAAE,CAAA5B,QAAA,cACnEnD,IAAA,CAACf,MAAM,EACLuF,OAAO,CAAC,WAAW,CACnBQ,SAAS,cAAEhF,IAAA,CAACP,IAAI,GAAE,CAAE,CACpB4E,OAAO,CAAEtC,UAAW,CACpBkD,IAAI,CAAC,OAAO,CAAA9B,QAAA,CACb,kBAED,CAAQ,CAAC,CACN,CAAC,CAELvB,KAAK,eACJ5B,IAAA,CAACT,KAAK,EAAC2F,QAAQ,CAAC,SAAS,CAACpB,EAAE,CAAE,CAAEgB,EAAE,CAAE,CAAE,CAAE,CAAA3B,QAAA,CAAC,gDAEzC,CAAO,CACR,EACI,CAAC,CAEZ,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}