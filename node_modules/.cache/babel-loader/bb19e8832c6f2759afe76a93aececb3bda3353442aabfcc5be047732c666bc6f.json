{"ast":null,"code":"import{randomBytes}from'@noble/hashes/utils';/**\n * Encryption Service\n * Handles all encryption/decryption operations for PHI data\n * Uses Web Crypto API with AES-256-GCM\n */export class EncryptionService{constructor(){this.algorithm='AES-GCM';this.keyLength=256;this.ivLength=12;// 96 bits for GCM\nthis.tagLength=128;// 128-bit auth tag\nthis.masterKey=null;}async initialize(){// In production, this would retrieve/generate keys securely\n// For now, we'll generate a new key per session\nthis.masterKey=await this.generateKey();// Store key in session storage (not ideal for production)\n// Real implementation would use secure key management\nconst exportedKey=await window.crypto.subtle.exportKey('raw',this.masterKey);sessionStorage.setItem('haven-temp-key',this.arrayBufferToBase64(exportedKey));}async generateKey(){return window.crypto.subtle.generateKey({name:this.algorithm,length:this.keyLength},true,// extractable\n['encrypt','decrypt']);}async encrypt(data){if(!this.masterKey){throw new Error('Encryption key not initialized');}// Convert data to JSON string\nconst plaintext=JSON.stringify(data);const encoder=new TextEncoder();const encodedData=encoder.encode(plaintext);// Generate random IV\nconst iv=randomBytes(this.ivLength);// Encrypt\nconst ciphertext=await window.crypto.subtle.encrypt({name:this.algorithm,iv:iv,tagLength:this.tagLength},this.masterKey,encodedData);// Combine IV and ciphertext\nconst combined=new Uint8Array(iv.length+ciphertext.byteLength);combined.set(iv,0);combined.set(new Uint8Array(ciphertext),iv.length);// Return base64 encoded\nreturn{data:this.arrayBufferToBase64(combined),algorithm:this.algorithm,timestamp:Date.now()};}async decrypt(encryptedData){if(!this.masterKey){throw new Error('Encryption key not initialized');}// Decode from base64\nconst combined=this.base64ToArrayBuffer(encryptedData.data);// Extract IV and ciphertext\nconst iv=combined.slice(0,this.ivLength);const ciphertext=combined.slice(this.ivLength);// Decrypt\nconst decrypted=await window.crypto.subtle.decrypt({name:this.algorithm,iv:iv,tagLength:this.tagLength},this.masterKey,ciphertext);// Decode and parse JSON\nconst decoder=new TextDecoder();const plaintext=decoder.decode(decrypted);return JSON.parse(plaintext);}// Utility functions\narrayBufferToBase64(buffer){const bytes=new Uint8Array(buffer);let binary='';for(let i=0;i<bytes.byteLength;i++){binary+=String.fromCharCode(bytes[i]);}return btoa(binary);}base64ToArrayBuffer(base64){const binary=atob(base64);const bytes=new Uint8Array(binary.length);for(let i=0;i<binary.length;i++){bytes[i]=binary.charCodeAt(i);}return bytes;}// Generate encryption metadata for audit logs\ngetEncryptionMetadata(){return{algorithm:this.algorithm,keyLength:this.keyLength,ivLength:this.ivLength,tagLength:this.tagLength,timestamp:new Date().toISOString()};}}// What we're NOT implementing:\n// - Key rotation (can add later)\n// - Hardware security module (HSM) integration\n// - Multi-tenant key management\n// - Encrypted search capabilities\n// - Homomorphic encryption\n// Just solid, standard AES-256-GCM encryption","map":{"version":3,"names":["randomBytes","EncryptionService","constructor","algorithm","keyLength","ivLength","tagLength","masterKey","initialize","generateKey","exportedKey","window","crypto","subtle","exportKey","sessionStorage","setItem","arrayBufferToBase64","name","length","encrypt","data","Error","plaintext","JSON","stringify","encoder","TextEncoder","encodedData","encode","iv","ciphertext","combined","Uint8Array","byteLength","set","timestamp","Date","now","decrypt","encryptedData","base64ToArrayBuffer","slice","decrypted","decoder","TextDecoder","decode","parse","buffer","bytes","binary","i","String","fromCharCode","btoa","base64","atob","charCodeAt","getEncryptionMetadata","toISOString"],"sources":["C:/Users/brian/OneDrive/Desktop/shadow-sidekick-sqlite-vss-poc/haven-mental-health/src/encryption/encryption-service.js"],"sourcesContent":["import { randomBytes } from '@noble/hashes/utils';\n\n/**\n * Encryption Service\n * Handles all encryption/decryption operations for PHI data\n * Uses Web Crypto API with AES-256-GCM\n */\nexport class EncryptionService {\n  constructor() {\n    this.algorithm = 'AES-GCM';\n    this.keyLength = 256;\n    this.ivLength = 12; // 96 bits for GCM\n    this.tagLength = 128; // 128-bit auth tag\n    this.masterKey = null;\n  }\n\n  async initialize() {\n    // In production, this would retrieve/generate keys securely\n    // For now, we'll generate a new key per session\n    this.masterKey = await this.generateKey();\n    \n    // Store key in session storage (not ideal for production)\n    // Real implementation would use secure key management\n    const exportedKey = await window.crypto.subtle.exportKey('raw', this.masterKey);\n    sessionStorage.setItem('haven-temp-key', this.arrayBufferToBase64(exportedKey));\n  }\n\n  async generateKey() {\n    return window.crypto.subtle.generateKey(\n      {\n        name: this.algorithm,\n        length: this.keyLength\n      },\n      true, // extractable\n      ['encrypt', 'decrypt']\n    );\n  }\n\n  async encrypt(data) {\n    if (!this.masterKey) {\n      throw new Error('Encryption key not initialized');\n    }\n\n    // Convert data to JSON string\n    const plaintext = JSON.stringify(data);\n    const encoder = new TextEncoder();\n    const encodedData = encoder.encode(plaintext);\n\n    // Generate random IV\n    const iv = randomBytes(this.ivLength);\n\n    // Encrypt\n    const ciphertext = await window.crypto.subtle.encrypt(\n      {\n        name: this.algorithm,\n        iv: iv,\n        tagLength: this.tagLength\n      },\n      this.masterKey,\n      encodedData\n    );\n\n    // Combine IV and ciphertext\n    const combined = new Uint8Array(iv.length + ciphertext.byteLength);\n    combined.set(iv, 0);\n    combined.set(new Uint8Array(ciphertext), iv.length);\n\n    // Return base64 encoded\n    return {\n      data: this.arrayBufferToBase64(combined),\n      algorithm: this.algorithm,\n      timestamp: Date.now()\n    };\n  }\n\n  async decrypt(encryptedData) {\n    if (!this.masterKey) {\n      throw new Error('Encryption key not initialized');\n    }\n\n    // Decode from base64\n    const combined = this.base64ToArrayBuffer(encryptedData.data);\n    \n    // Extract IV and ciphertext\n    const iv = combined.slice(0, this.ivLength);\n    const ciphertext = combined.slice(this.ivLength);\n\n    // Decrypt\n    const decrypted = await window.crypto.subtle.decrypt(\n      {\n        name: this.algorithm,\n        iv: iv,\n        tagLength: this.tagLength\n      },\n      this.masterKey,\n      ciphertext\n    );\n\n    // Decode and parse JSON\n    const decoder = new TextDecoder();\n    const plaintext = decoder.decode(decrypted);\n    return JSON.parse(plaintext);\n  }\n\n  // Utility functions\n  arrayBufferToBase64(buffer) {\n    const bytes = new Uint8Array(buffer);\n    let binary = '';\n    for (let i = 0; i < bytes.byteLength; i++) {\n      binary += String.fromCharCode(bytes[i]);\n    }\n    return btoa(binary);\n  }\n\n  base64ToArrayBuffer(base64) {\n    const binary = atob(base64);\n    const bytes = new Uint8Array(binary.length);\n    for (let i = 0; i < binary.length; i++) {\n      bytes[i] = binary.charCodeAt(i);\n    }\n    return bytes;\n  }\n\n  // Generate encryption metadata for audit logs\n  getEncryptionMetadata() {\n    return {\n      algorithm: this.algorithm,\n      keyLength: this.keyLength,\n      ivLength: this.ivLength,\n      tagLength: this.tagLength,\n      timestamp: new Date().toISOString()\n    };\n  }\n}\n\n// What we're NOT implementing:\n// - Key rotation (can add later)\n// - Hardware security module (HSM) integration\n// - Multi-tenant key management\n// - Encrypted search capabilities\n// - Homomorphic encryption\n// Just solid, standard AES-256-GCM encryption"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}